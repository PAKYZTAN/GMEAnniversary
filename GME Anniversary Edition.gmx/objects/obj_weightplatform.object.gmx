<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_weightplatform</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>16</depth>
  <persistent>0</persistent>
  <parentName>obj_platformparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Weight platform

/*
//  This item uses creation code.
//
//  platx = X position of the secondary platform
//  platy = Y position of the secondary platform
*/

//Default variables
platx = x+80;
platy = y;

//Default parent
parent = noone;

//Create the secondary platform
alarm[0] = 2

//Do not animate
image_speed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create the secondary platform

parent = instance_create(platx,platy,obj_weightplatform_right);
parent.parent = id;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Weight platform logic

//Make sure the parent exists
if (instance_exists(parent)) {

    //If the player is on this moving platform
    if ((collision_rectangle(bbox_left,bbox_top-5,bbox_right,bbox_top+4,obj_playerparent,0,0))
    &amp;&amp; (obj_playerparent.bbox_bottom &lt; yprevious+5)
    &amp;&amp; (obj_playerparent.state &lt; 2)) {
    
        //Check for a moving platform
        var check = collision_rectangle(obj_playerparent.bbox_left,obj_playerparent.bbox_bottom-1,obj_playerparent.bbox_right,obj_playerparent.bbox_bottom+1,obj_semisolid,0,1);
        if (check)
        || (collision_rectangle(obj_playerparent.bbox_left,obj_playerparent.bbox_bottom-1,obj_playerparent.bbox_right,obj_playerparent.bbox_bottom+1,obj_quicksand,0,0))
            exit;
            
        //Make this platform go down
        vspeed = 0.5;
    
        //Make the parent platform go up
        with (parent) vspeed = -0.5;
    
        //Snap the player vertically
        obj_playerparent.y = ceil(bbox_top-15);
    }
    
    //Otherwise, if the player is not on this platform or in the parent platform
    else if (!collision_rectangle(bbox_left,bbox_top-5,bbox_right,bbox_top+4,obj_playerparent,0,0)) 
    &amp;&amp; (!collision_rectangle(parent.bbox_left,parent.bbox_top-5,parent.bbox_right,parent.bbox_top+4,obj_playerparent,0,0)) {
    
        //If the platform is above the y start position
        if (y &lt; ystart) {
        
            //Set the vertical speed
            vspeed = 0.25;
            
            //Set the parent vertical speed
            with (parent) vspeed = -0.25;
        }
        
        //Otherwise, if the platform is below the y start position
        else if (y &gt; ystart) {
        
            //Set the vertical speed
            vspeed = -0.25;
            
            //Set the parent vertical speed
            with (parent) vspeed = 0.25;    
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the platform

//Draw the platform
draw_sprite(sprite_index,0,round(x),round(y));

//Draw the stem
draw_sprite(sprite_index,1,round(x),round(y)+16);
for (i=0; i&lt;floor(room_height/16)+1; i++;) {

    draw_sprite(sprite_index,2,round(x),round(y)+32+(i*16));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
