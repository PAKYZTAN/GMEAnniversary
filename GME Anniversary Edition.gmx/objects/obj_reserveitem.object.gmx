<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mushroom</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-12</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reserve item

//Sequence to display
//0: Small to big
//1: Big to small
//2: Powerup
//3: Powerdown
//4: Transform
sequence = 0;

//Play reserve sound
audio_play_sound(snd_drop, 0, false)

//Animate
image_speed = 0.15;

//Move down
vspeed = 1;

//Make it invisible
alarm[0] = 1;

//Item check
alarm[2] = 1;

//Sprite check
alarm[3] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprite check

if (sprite_index == spr_leaf) {

    image_speed = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item check

switch (sprite_index) {

    //Set 'Power Up' sequence
    case (spr_fireflower):
    case (spr_iceflower):
    case (spr_superflower):
    case (spr_voltshroom): {
    
        sequence = 2; 
        break;
    }
        
    //Set 'Transform' sequence
    default: 
        sequence = 4; break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make it invisible

visible = true;
alarm[0] = 12;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make it invisible

visible = false;
alarm[1] = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reserve item logic

if (bbox_top &gt; room_height)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_playerparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change powerup

//If the reserve item is a mushroom
if (sprite_index == spr_mushroom) {

    //If Mario is small.
    if (global.powerup == cs_small) {
    
        //Play 'Powerup' sound.
        audio_play_sound(snd_powerup, 0, false);
    
        //Turn Mario into 'Super' Mario.
        global.powerup = cs_big;
        
        //Perform animation sequence
        with (instance_create(0,0,obj_player_transform))
            sequence = 0;
    }
    
    //Otherwise, get a reserve mushroom
    else {
    
        //Play 'Powerup' sound.
        audio_play_sound(snd_reserve, 0, false);
    
        //If NO item is in reserve.
        if (global.reserve == cs_small)
            global.reserve = cs_big;
    }
}
else {

    //If Mario is big and there's NOT an item on reserve.
    if (global.powerup == cs_big) 
    &amp;&amp; (global.reserve == cs_small) { 
    
        //If health mode is NOT enabled, save a mushroom in the reserve box.
        if (global.healthmode == false)
            global.reserve = cs_big;
    }
    
    //Otherwise, if Mario does have a powerup.
    else if (global.powerup &gt; cs_big) {
    
        //Set the previous powerup as a reserve item
        global.reserve = global.powerup;
    }
    
    //If Mario is NOT Fire Mario.
    if (global.powerup != sprite_get_constant(sprite_index)) {
    
        //Turn Mario into Fire Mario.
        global.powerup = sprite_get_constant(sprite_index);
        
        //Perform animation sequence and play sound
        with (instance_create(0,0,obj_player_transform)) {
        
            sequence = other.sequence;
            if (other.sequence != 4)
                audio_play_sound(snd_powerup, 0, false);
            else
                audio_play_sound(snd_transform, 0, false);
        }
    }
    else {
    
        //Play 'Powerup' sound
        audio_play_sound(snd_reserve, 0, false);
    }    
}

//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
