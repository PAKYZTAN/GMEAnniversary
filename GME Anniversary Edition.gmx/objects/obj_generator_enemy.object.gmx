<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_marker_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactivateparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy Generator

/*
**  This item uses creation code!
**
**  object  = Enemy to generate
**
**  delay   = How many time should each enemy appear?
**
**  dir     = Pick from below
**      0:    Right
**      1:    Up
**      2:    Left
**      3:    Down
**
**  spd     = Speed of the resulting enemy
*/

//Default values
object = obj_goomba;
delay = 120;
dir = 0;
spd = 0.5;

//Manage movement
ready = 0;

//Scale
xscale = 1;

//Set depth
depth = 10;

//Do not animate
image_speed = 0;
image_index = 0;

//Previous delay (It increments as long the player is visible)
delayprev = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Manage enemy generation

//Preparing enemy
if (ready == 0) {

    //If the player exists
    if (instance_exists(obj_playerparent)) 
    &amp;&amp; (instance_number(object) &lt; 6)
    &amp;&amp; (obj_levelcontrol.gswitchon == false) {
    
        //First check if there's no solid blocking the entrance
        if (dir == 0) &amp;&amp; ((collision_rectangle(bbox_right+8, bbox_top, bbox_right+8, bbox_bottom, obj_playerparent, 0, 0)) || (collision_rectangle(bbox_right+8, bbox_top, bbox_right+8, bbox_bottom, obj_solid, 0, 0)))
        || (dir == 1) &amp;&amp; ((collision_rectangle(bbox_left, bbox_top-16, bbox_right, bbox_top-1, obj_playerparent, 0, 0)) || (collision_rectangle(bbox_left, bbox_top-16, bbox_right, bbox_top-1, obj_solid, 0, 0)))
        || (dir == 2) &amp;&amp; ((collision_rectangle(bbox_left-8, bbox_top, bbox_left-8, bbox_bottom, obj_playerparent, 0, 0)) || (collision_rectangle(bbox_left-8, bbox_top, bbox_left-8, bbox_bottom, obj_solid, 0, 0)))
        || (dir == 3) &amp;&amp; ((collision_rectangle(bbox_left, bbox_bottom+1, bbox_right, bbox_bottom+1, obj_playerparent, 0, 0)) || (collision_rectangle(bbox_left, bbox_bottom+1, bbox_right, bbox_bottom+1, obj_semisolid, 0, 0)))
            exit;
        
        //Decrement delay
        delay--;
        delayprev++;
        
        //Generate a enemy
        if (delay &lt; 1) {
    
            //Begin generating an enemy
            ready = 1;
            
            //Reset delay
            delay = delayprev;
            delayprev = 0;
        
            //Set up movement
            motion_set(0+(90*dir), 0.5);
        }
    }
    
    //Face the player but only if it exists and dir is set to 1 or 3
    if (dir == 1)
    || (dir == 3) {
        
        if (!instance_exists(obj_playerparent))
        || (obj_playerparent.x &lt; x)
            xscale = -1;
        else
            xscale = 1;
    }
}

//Generate
else if (ready == 1) {

    //Keep moving until there's no solid overlapping
    if (!collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_solid, 0, 0)) {
    
        //Create the object
        with (instance_create(x, y, object)) {
        
            //Set up the motion
            if (other.hspeed != 0) {
                      
                hspeed = other.spd;
                xscale = 1*sign(other.hspeed);
            }
            else {
                       
                hspeed = other.spd*sign(other.xscale);
                xscale = 1*sign(other.xscale);
            }
        }
        
        //Stop movement
        hspeed = 0;
        vspeed = 0;
        
        //Return to the start position
        x = xstart;
        y = ystart;
          
        //Wait
        ready = 0;
    }
}

//Hereby the sprite and check it
sprite_index = object_get_sprite(object);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the object

draw_sprite_ext(sprite_index, -1, round(x), round(y), xscale, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
