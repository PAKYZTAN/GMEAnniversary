<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tides</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A tide, add it on your underwater stages.

/*
//  This item uses creation code.
//
//  push    = Leave it to true to push Mario when it's swimming inside.
//  poison  = Makes this water poisonous and insta-kills the player if touched.
//  myspd   = Movement speed of the tides
*/

//Whether this can push Mario.
push = false;
poison = false;
myspd = 0.25;

//Animate
image_speed = 0.075;

//Set depth
depth = -10;

//Make the tide rise/shrink
alarm[0] = 360;

//Create bubble effects
alarm[1] = 7;

//X position
xx = 0;

//Create a water surface
water = instance_create(x,y+4,obj_swim);
with (water) {

    image_xscale = room_width;
    image_yscale = room_height;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop tides

//Stop vertical speed
vspeed = 0;

//Snap into the grid
move_snap(16,16);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create bubble effects

alarm[1] = 7;
if (push)
    instance_create(view_xview[0]+view_wview[0],random_range(y+24,room_height),obj_bubble_v);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move

if (vspeed == 0) {

    //Collision with a 'Up' arrow modifier.
    if (collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_up,0,1))   
        vspeed = -myspd;
    
    //Collision with a 'Down' arrow modifier.
    else if (collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_down,0,1))
        vspeed = myspd;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Water logic

//Update xx
if (poison == false) then xx -= 0.5;

//If the water is changing it's position.
if (vspeed != 0) {

    //If the water collides with a 'End' modifier.
    if (collision_rectangle(bbox_left,y,bbox_right,y+15,obj_endmarker,0,1)) {
    
        //Stop moving
        vspeed = 0;
        
        //Snap in grid
        move_snap(16,16);
        
        //Repeat again
        alarm[0] = 360;
    }
}

//Update water position.
water.x = x;
water.y = y+4;

//Check for Mario
var player = collision_rectangle(water.bbox_left,water.bbox_top,water.bbox_right,water.bbox_bottom,obj_playerparent,0,1);

//If this water is poisonous and Mario overlaps this object
if (poison) {

    if (player)
    &amp;&amp; (player.swimming) {
    
        with (player) {
        
            instance_create(x, y, obj_player_dead);
            instance_destroy();
        }
    }
}

//If Mario is overlapping this object and it's swimming.
if (push) {

    if (!instance_exists(obj_puller))
    &amp;&amp; (player) 
    &amp;&amp; (player.swimming)
    &amp;&amp; (global.powerup != cs_frog)
    &amp;&amp; (global.powerup != cs_penguin)
    &amp;&amp; (!collision_rectangle(player.bbox_left-1,player.bbox_top+4,player.bbox_left,player.bbox_bottom-1,obj_solid,1,1))
        player.x -= 0.3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw tides

//If the water is not poisonous
if (poison == false) {

    //Draw the top part
    draw_sprite_tiled_area_ext(sprite_index, -1, 0+xx, y, 0, y, room_width, y+47, c_white, image_alpha);
    
    //Set the alpha
    if (image_alpha &gt; 0) {
    
        draw_set_alpha(image_alpha/2);
    }
    
    //Set the colour
    draw_set_colour(make_colour_rgb(24, 136, 200));
}

//Otherwise, if the water is poisonous
else {

    //Draw the top part
    draw_sprite_tiled_area_ext(spr_tides_poison, -1, 0+xx, y, 0, y, room_width, y+47, c_white, image_alpha);
    
    //Set the alpha
    if (image_alpha &gt; 0) {
    
        draw_set_alpha(image_alpha);
    }
    
    //Set the colour
    draw_set_colour(make_colour_rgb(89, 49, 146));
}

//Draw a rectangle.
draw_rectangle(x, y+48, room_width, room_height, false);

//Reset the alpha
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
