<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_gladrus</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gladrus

//How vulnerable is this enemy to various items?
vulnerable = 2;

//How vulnerable is this enemy to the player?
stomp = 4;

//How vulnerable is this enemy to yoshi?
edible = 2;

//Facing direction
xscale = 1;

//Whether the object is swimming
swimming = false;

//Whether the object is not pissed
charge = false;

//Fake
fxs = 1;
fys = 1;
squishy = 0;

//Animate
image_speed = 0.125;

//Move
alarm[10] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gladrus logic

//Inherit event
event_inherited();

//If the gladrus is angry
if (charge == 1) {

    //Previous hspeed
    prevhspeed = hspeed;
    
    //If the direction changed, speed up
    if (hspeed != prevhspeed) then hspeed = sign(hspeed)*1.5;
        
    //Keep charging at the player
    if (charge == 1) {
    
        //If there's no gravity
        if (gravity == 0) {
            
            //Follow the player
            if (!instance_exists(obj_playerparent))
            || (obj_playerparent.x &lt; x) {
            
                hspeed -= 0.0324;
                if (hspeed &lt; -1.5)
                    hspeed = -1.5;
            }
            else {
            
                hspeed += 0.0324;
                if (hspeed &gt; 1.5)
                    hspeed = 1.5;
            }
        }
    }
    
    //Face towards the player
    if (!instance_exists(obj_playerparent))
    || (obj_playerparent.x &lt; x)
        xscale = -1;
    else
        xscale = 1;
}

//Otherwise, face towards direction
else {

    //Handle squish animation
    if (squishy == 1) {
    
        //Return to normal
        fxs -= 0.05;
        fys += 0.05;
    
        //Start charging at Mario
        if (fxs &lt;= 1) &amp;&amp; (fys &gt;= 1) {
        
            //End squish
            squishy = 2;
            
            //Begin to charge
            charge = 1;
            
            //Set the sprite
            sprite_index = spr_gladrus_mad;
            
            //Animate
            image_speed = 0.3;
        }
    }
    
    //Face towards the player
    if (hspeed &gt; 0)
        xscale = 1;
    else if (hspeed &lt; 0)
        xscale = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gladrus stomp event

//If the gladrus is not angry
if (charge == 0) &amp;&amp; (squishy == 0) {

    //Get points based on combo
    if (obj_playerparent.hitcombo &lt;= 6) //If the player did 6 or less consecutive stomps
        with (instance_create((bbox_left+bbox_right)/2-8,y,obj_score)) event_user(2+obj_playerparent.hitcombo);
    else {
            
        //If the combo is odd
        if (obj_playerparent.hitcombo % 2 == 1)
            with (instance_create((bbox_left+bbox_right)/2-8,y,obj_score)) event_user(9);
        
        //Otherwise, if the combo is even
        else if (obj_playerparent.hitcombo % 2 == 0)
            with (instance_create((bbox_left+bbox_right)/2-8,y,obj_score)) event_user(10);        
    }
    
    //Increment combo
    obj_playerparent.hitcombo++;
    
    //Squish walrus
    squishy = 1;
    image_speed = 0;
    image_index = 0;
    
    //Set scale
    fxs = 1.5;
    fys = 0.5;
    
    //Stop movement
    hspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw gladrus

//If the walrus has been squished
if (squishy == 1)
    draw_sprite_ext(spr_gladrus_sq, -1, round(x), round(y)+17, xscale * fxs, fys, 0, c_white, 1);
else
    event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
