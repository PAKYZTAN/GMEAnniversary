<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bossbass</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Big Bertha

//How vulnerable is this enemy to various items?
vulnerable = 0;

//How vulnerable is this enemy to the player?
stomp = 2;

//How vulnerable is this enemy to yoshi?
edible = 2;

//Facing direction
xscale = 1;

//Wait and spit
wait = 0;

//Set up starting direction
dir = -1;

//Check direction
prevdir = -1;

//Animate
image_speed = 0.125;

//Start moving
alarm[10] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start moving

//Set the vertical speed
vspeed = 0.5;

//Set the horizontal movement
if (!instance_exists(obj_playerparent))
|| (obj_playerparent.x &lt; x) {

    dir = -1;
    prevdir = -1;
}
else {

    dir = 1;
    prevdir = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Resume movement

//Resume movement
wait = 0;

//Set the horizontal speed
hspeed = 0.04*sign(xscale);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spit a mini cheep-cheep

//Create a mini-cheep
myson = instance_create(x,y+4,obj_bigbertha_cheep);
with (myson) {

    //Set the hspeed.
    hspeed = 1.5*sign(other.dir);
    
    //Set the facing direction.
    xscale = 1*sign(other.dir);
}

//Resume movement
alarm[1] = 32;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Boss Bass logic

//If the boss bass is moving to the right.
if (dir == 1) {
    
    //Cap horizontal speed.
    if (hspeed &gt; 1.5)
    hspeed = 1.5;
        
    //Change direction.
    if (x &gt; xstart+24)
        dir = -1;
}

//Otherwise, if the boss bass is moving to the left.
else if (dir == -1) {

    //Cap horizontal speed.
    if (hspeed &lt; -1.5)
    hspeed = -1.5;
        
    //Change direction.
    if (x &lt; xstart-24)    
        dir = 1;
}

//Allow/Disallow boss bass's movement.
if (wait == 0) {

    //Check if the facing direction is not equal to the previous direction.
    if (xscale != prevdir) {
    
        if (random(round(100)) &gt; 50) {
        
            //Set the spit sprite
            sprite_index = spr_bossbass_jump;
            
            //Set new direction
            prevdir = xscale;
                    
            //Wait
            wait = 1;
            
            //Set the hspeed
            hspeed = 0;
            
            //Swallow a cheep
            alarm[0] = 16;
        }
        else {
        
            //Set new direction
            prevdir = xscale;            
        }
    }

    //Set the horizontal speed.
    hspeed += 0.04*sign(dir);
}

//Otherwise, stop.
else {

    //Stop right there
    hspeed = 0;
}

//Wave
if (y &gt; ystart)
    vspeed -= 0.025;
else if (y &lt; ystart)
    vspeed += 0.025;
    
//Set the facing direction.
if (hspeed &gt; 0)
    xscale = 1;
else if (hspeed &lt; 0)
    xscale = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bigbertha_cheep">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Eat the fish

if (wait)
exit;

//Set the sprite of the fish
sprite_index = spr_bossbass;

//Destroy
with (other) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
