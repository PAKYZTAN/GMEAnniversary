<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cheepcheep</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_enemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cheep Cheep (ALWAYS ACTIVE)

//How vulnerable is this enemy to various items?
vulnerable = 0;

//How vulnerable is this enemy to the player?
stomp = 0;

//How vulnerable is this enemy to yoshi?
edible = 0;

//Facing direction
xscale = 1;

//Whether the cheep-cheep is jumping
jumping = 0;

//Animate
image_speed = 0.125;

//Start moving
alarm[10] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Generate a new cheep-cheep

with (instance_create(x,ystart,obj_enemy_tick)) sprite_index = spr_cheepcheep;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move towards the player

if (hspeed == 0) {

    if (!instance_exists(obj_playerparent))
    || (obj_playerparent.x &lt; x)
        hspeed = -2;
    else
        hspeed = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Allow the cheep to jump again.

jumping = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cheep Cheep logic

//Cap vertical speed
if (vspeed &gt; 4)
    vspeed = 4;

//If the player does exist and the cheep has not jumped yet.
if (instance_exists(obj_playerparent)) 
&amp;&amp; (jumping == 0) {

    //If the cheep has not jumped and the player is nearby.
    if (obj_playerparent.x &gt; x-32) 
    &amp;&amp; (obj_playerparent.x &lt; x+32) {
    
        //Make it jump
        jumping = 1;
        
        //Set the vertical speed
        vspeed = -4;
        gravity = 0.2;
        
        //Set the horizontal speed.
        hspeed = 1.25*sign(xscale);
    }
}

//Otherwise, look for a nearest water surface and allow the cheep to jump.
else {

    //Find a nearby body of water
    water = collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_swim,0,0);
    
    //If there's a body of water
    if (water) 
    &amp;&amp; (water.object_index != obj_waterbubble) {
    
        //If the cheep has jumped out of the water.
        if (jumping == 1) {
        
            //If the cheep makes contact with water.
            if ((y &gt; water.y-4) &amp;&amp; (vspeed &gt; 0)) {
            
                //Snap to position.
                y = water.y-4;
                
                //Stop vertical speed
                vspeed = 0;
                gravity = 0;
                
                //Disallow jumping
                jumping = 2;
                
                //Allow jumping.
                alarm[0] = 24;
                
                //Cap horizontal speed.
                hspeed = 2.5*sign(xscale);
            }
        }
    }
}

//Chase the player
if (jumping == 0) {

    //If the player does not exists or it's at the left
    if (!instance_exists(obj_playerparent))
    || (obj_playerparent.x &lt; x) {
    
        hspeed -= 0.1;
        if (hspeed &lt; -2.5)
            hspeed = -2.5;    
    }
    
    //Otherwise, go to the right
    else if (obj_playerparent.x &gt; x) {
    
        hspeed += 0.1;
        if (hspeed &gt; 2.5)
            hspeed = 2.5;
    }
}

//Facing direction
if (hspeed &gt; 0)
    xscale = 1;
else if (hspeed &lt; 0)
    xscale = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
