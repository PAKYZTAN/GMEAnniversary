<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_checkpoint</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>9</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A checkpoint, let the player begin from the last checkpoint reached.

/*
**  This item uses creation code!
**
**  xcoor       = X coordinate where you want the player to appear.
**  ycoor       = Y coordinate where you want the player to appear.
*/

//Default Values:
xcoor = x+8;
ycoor = y+32;

//Do not animate
image_speed = 0;
image_index = 0;

//Angle
angle = 0;

//Part
part = 2.5;

//Wave speed
wavespeed = 0.2;

//Flag
flagsprite = spr_checkpoint_flag;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_playerparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Save the last point

if (flagsprite == spr_checkpoint_flag) {

    //Play 'Whistle' sound
    audio_play_sound(snd_whistle, 0, false);

    //Deactivate checkpoints
    with (obj_checkpoint) flagsprite = spr_checkpoint_flag;
    
    //Switch to the player flag
    flagsprite = spr_checkpoint_flag_m;
    
    //Recover all health
    if (health &lt; 4) then health = 4;
    
    if (global.healthmode == false) 
    {
        //If Mario is small.
        if (global.powerup == cs_small) {
        
            audio_play_sound(snd_powerup, 0, false);
            
            //Turn Mario into 'Super' Mario.
            global.powerup = cs_big;
            
            //Perform animation sequence
            with (instance_create(0,0,obj_player_transform))
                sequence = 0;
        }
    }
    
    //Sparkles
    event_user(0);
    
    //Remember checkpoint
    global.checkpoint = id;
    global.checkpointroom = room;
    
    //Save collected powerstar
    for (var i = 0; i &lt; 3; i++) {
    
        if (ds_map_find_value(global.sc[i],global.level) == 1)
            ds_map_replace(global.sc[i],global.level,2);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sparkles

//Create slow spark effects
var a = 0;
repeat (8) {

    with (instance_create(x+8,y+4,obj_smoke)) {
    
        //Set the sprite
        sprite_index = spr_boltspark;
        
        //Animate
        image_speed = 0.1;
        
        //Motion
        motion_set(a,0.5);
    }
    a += 45;
}

//Create fast spark effects
var b = 22.5;
repeat (8) {

    with (instance_create(x+8,y+4,obj_smoke)) {
    
        //Set the sprite
        sprite_index = spr_boltspark;
        
        //Animate
        image_speed = 0.1;
        
        //Motion
        motion_set(b,1);
    }
    b += 45;
}

//Get 2000 points
with (instance_create(x,y,obj_score))
    event_user(6);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change the flag if this checkpoint is set

if (global.checkpoint == id)
    flagsprite = spr_checkpoint_flag_m;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw checkpoint and flag

//Keep waving
angle += wavespeed;

//Draw entire checkpoint
draw_sprite(sprite_index,-1,x,y);
for (i=0; i&lt;=27/part; i+=1)
    draw_sprite_part(flagsprite,-1,i*part,0,part,18,round(x)+8+(i*part),round(y)+8+(sin(angle+i)));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
