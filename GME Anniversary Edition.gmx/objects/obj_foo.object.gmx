<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_foo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Foo

//How vulnerable is this enemy to various items?
vulnerable = 0;

//How vulnerable is this enemy to the player?
stomp = 4;

//How vulnerable is this enemy to yoshi?
edible = 0;

//Facing direction
xscale = 1;

//Whether this object is swimming
swimming = 0;

//Blow time
blowtime = 200;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Foo logic

//Inherit event
event_inherited();

//If blowing
if (sprite_index == spr_foo_blow)
&amp;&amp; (image_index == 1) {
    
    //Create fog
    with (instance_create(x,y,obj_foo_fog)) {
    
        //If facing right
        if (other.xscale == 1)
            motion_set(random_range(-30, 30), random_range(1,1.5));
            
        //Otherwise, if facing left
        else if (other.xscale == -1)
            motion_set(random_range(150,210), random_range(1,1.5));
    }
}

//Otherwise, make sure it faces the player
else {

    //If the player does not exist or it's at the left
    if (!instance_exists(obj_playerparent))
    || (obj_playerparent.x &lt; x)
        xscale = -1;
    else
        xscale = 1;
}

//If the blow time is smaller than 200
if (blowtime &lt;= 200) {

    //Set the blowing sprite
    sprite_index = spr_foo_blow;
    
    //Do not animate
    image_speed = 0;
    image_index = 1;
}

//Otherwise, if the blow time is greater than 201
else if (blowtime &gt; 200) {

    //If the blow time is smaller than 300
    if (blowtime &lt;= 300) {
    
        //Set the blowing sprite
        sprite_index = spr_foo_blow;
        
        //Do not animate
        image_speed = 0;
        image_index = 0;
    }
    
    //Otherwise, animate normally
    else {
    
        //Set the normal sprite
        sprite_index = spr_foo;
        
        //Animate
        image_speed = 0.125;
    }
}

//Decrement blowtime
blowtime--;
if (blowtime &lt; 0)
    blowtime = 800;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Custom stomp script

//Get points based on combo
if (obj_playerparent.hitcombo &lt;= 6) //If the player did 6 or less consecutive stomps
    with (instance_create((bbox_left+bbox_right)/2-8,y,obj_score)) event_user(2+obj_playerparent.hitcombo);
else {
        
    //If the combo is odd
    if (obj_playerparent.hitcombo % 2 == 1)
        with (instance_create((bbox_left+bbox_right)/2-8,y,obj_score)) event_user(9);
    
    //Otherwise, if the combo is even
    else if (obj_playerparent.hitcombo % 2 == 0)
        with (instance_create((bbox_left+bbox_right)/2-8,y,obj_score)) event_user(10);        
}
    
//Increment combo
obj_playerparent.hitcombo++;

//Defaults to dead script
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Custom dead script

repeat (10) {

    with (instance_create(x,y,obj_foo_fog)) {
    
        motion_set(random(360), random_range(0.25,0.5));
        scale = 0.5;
    }
}
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw foo

draw_sprite_ext(sprite_index, -1, round(x), round(y), xscale, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
