<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_32mask</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactivateparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A pipe that can blow the player away.

//Direction of the bubbles.
direct = 0;

//Set up the position of the bubbles.
a = 0;
b = 0;

//Set up the direction.
ready1 = 0;
ready2 = 0;

//Start blowing bubbles.
alarm[0] = 5;
alarm[1] = 5;

//Check up if there's a arrow modifier on the object and change up the direction of the blown bubbles if so.
if (collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_up,0,0)) //Up
{
    direct = 0;
    with (collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_up,0,0))
        instance_destroy();
}
else if (collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_down,0,0)) //Down
{
    direct = 1;
    with (collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_down,0,0))
        instance_destroy();
}
else if (collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_left,0,0)) //Left
{
    direct = 2;
    with (collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_left,0,0))
        instance_destroy();
}
else if (collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_right,0,0)) //Right
{
    direct = 3;
    with (collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_right,0,0))
        instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Blowing pipe logic.

//If the pswitch is not active.
if (!obj_levelcontrol.switchon) {
    
    if (direct == 0) { //Up
    
        //Set up the position of the blown bubbles.
        if (!ready2) {
        
            b++;
            if (b = 8)
                ready2 = true;
        }
        else {
        
            b--;
            if (b = 0)
                ready2 = false;
        }
        
        //Create a bubble
        with (instance_create(bbox_right-4-b,bbox_top-4,obj_bubble_blown)) motion_set(90,6);
    }
    else if (direct == 1) { //Down
    
        //Set up the position of the blown bubbles.
        if (!ready2) {
        
            b++;
            if (b = 8)
                ready2 = true;
        }
        else {
        
            b--;
            if (b = 0)
                ready2 = false;
        }
        
        //Create a bubble
        with (instance_create(bbox_right-4-b,bbox_bottom,obj_bubble_blown)) motion_set(270,6);    
    }
    else if (direct == 2) { //Left
    
        //Set up the position of the blown bubbles.
        if (!ready2) {
        
            b++;
            if (b = 8)
                ready2 = true;
        }
        else {
        
            b--;
            if (b = 0)
                ready2 = false;
        }
        
        //Create a bubble
        with (instance_create(bbox_left-4,bbox_bottom-4-b,obj_bubble_blown)) motion_set(180,6);
    }
    else if (direct == 3) { //Right
    
        //Set up the position of the blown bubbles.
        if (!ready2) {
        
            b++;
            if (b = 8)
                ready2 = true;
        }
        else {
        
            b--;
            if (b = 0)
                ready2 = false;
        }
        
        //Create a bubble
        with (instance_create(bbox_right,bbox_bottom-4-b,obj_bubble_blown)) motion_set(0,6);
    }
}

//Repeat the process.
alarm[1] = round(random_range(5,10));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Blowing pipe logic.

//If the pswitch is not active.
if (!obj_levelcontrol.switchon) {
    
    if (direct == 0) { //Up
    
        //Set up the position of the blown bubbles.
        if (!ready1) {
        
            a++;
            if (a = 8)
                ready1 = true;
        }
        else {
        
            a--;
            if (a = 0)
                ready1 = false;
        }
        
        //Create a bubble
        with (instance_create(bbox_left+a,bbox_top-4,obj_bubble_blown)) motion_set(90,6);
    }
    else if (direct == 1) { //Down
    
        //Set up the position of the blown bubbles.
        if (!ready1) {
        
            a++;
            if (a = 8)
                ready1 = true;
        }
        else {
        
            a--;
            if (a = 0)
                ready1 = false;
        }
        
        //Create a bubble
        with (instance_create(bbox_left+a,bbox_bottom,obj_bubble_blown)) motion_set(270,6);    
    }
    else if (direct == 2) { //Left
    
        //Set up the position of the blown bubbles.
        if (!ready1) {
        
            a++;
            if (a = 8)
                ready1 = true;
        }
        else {
        
            a--;
            if (a = 0)
                ready1 = false;
        }
        
        //Create a bubble
        with (instance_create(bbox_left-4,bbox_top+a,obj_bubble_blown)) motion_set(180,6);
    }
    else if (direct == 3) { //Right
    
        //Set up the position of the blown bubbles.
        if (!ready1) {
        
            a++;
            if (a = 8)
                ready1 = true;
        }
        else {
        
            a--;
            if (a = 0)
                ready1 = false;
        }
        
        //Create a bubble
        with (instance_create(bbox_right,bbox_top+a,obj_bubble_blown)) motion_set(0,6);
    }
}

//Repeat the process.
alarm[0] = round(random_range(5,10));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Blow the player upwards

if (instance_exists(obj_playerparent)) {

    //If the player does have the frog or penguin powerup or the P-Switch is active.
    if (((global.powerup == cs_frog) || (global.powerup == cs_penguin)) || (obj_levelcontrol.switchon))
    exit;
    
    if (direct == 0) { //Up
    
        //Blow the player upwards
        if (collision_rectangle(x,bbox_top-80,x+31,bbox_top,obj_playerparent,0,0)) {
        
            if (obj_playerparent.yspeed &gt; -4)
                obj_playerparent.yspeed -= 0.5;
        }
    }
    else if (direct == 1) { //Down
    
        //Blow the player downwards.
        if (collision_rectangle(x,bbox_bottom,x+31,bbox_bottom+80,obj_playerparent,0,0)) {
        
            if (obj_playerparent.yspeed &lt; 4)
                obj_playerparent.yspeed += 0.5;
        }    
    }
    else if (direct == 2) { //Left
    
        //Blow the player to the left
        if (collision_rectangle(bbox_left-80,y,bbox_left,y+31,obj_playerparent,0,0)) {
        
            if (obj_playerparent.xspeed &gt; -4)
                obj_playerparent.xspeed -= 0.5;
        }    
    }
    else if (direct == 3) { //Right
    
        //Blow the player to the right
        if (collision_rectangle(bbox_right,y,bbox_right+80,y+31,obj_playerparent,0,0)) {
        
            if (obj_playerparent.xspeed &lt; 4)
                obj_playerparent.xspeed += 0.5;
        }    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
