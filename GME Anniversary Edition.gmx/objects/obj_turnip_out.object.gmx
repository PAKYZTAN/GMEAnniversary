<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sproutmask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A vegetable that is being turned out

//Timer for bombs
aa = 0;

//Horizontal scale
xscale = 1;

//Do not animate
image_speed = 0;
image_index = 0;

//Whether the vegetable is pulled out
ready = 0;

//Whether the vegetable is a enemy
enemy = 0;
turnback = -1;

//Whether the vegetable is a powerup
powerup = 0;

//Whether the vegetable is drawn
drawpiece = 0;
drawpiece2 = 0;

//Check up the sprite
alarm[8] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create smoke effect

if (sprite_index == spr_vegshroom)
|| (sprite_index == spr_vegshroom_1up)
|| (sprite_index == spr_crystal)
|| (sprite_index == spr_crystal_red)
    instance_create(x,y,obj_smoke);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check up the sprite

//If the vegetable is a big one
if (sprite_index == spr_turnip_large) 
|| (sprite_index == spr_powblock_large) 
|| (powerup) {

    drawpiece = 1;
    drawpiece2 = 0;
    depth = 6;
    alarm[1] = 20;
}

//Otherwise if the vegetable is a enemy, a pow or a pullable mushroom block
else {

    if (enemy)
    || (sprite_index == spr_mblock)
    || (sprite_index == spr_powblock)
    || (sprite_index == spr_vegshroom)
    || (sprite_index == spr_vegshroom_1up)
    || (sprite_index == spr_propellerblock) {
    
        drawpiece2 = 3;
        if ((sprite_width &gt; 16) &amp;&amp; (sprite_height &gt; 16))
            alarm[5] = 9;
        else
            alarm[5] = 3;
    }
    else {
    
        drawpiece2 = 3;
        alarm[0] = 1;
    }
}

//If the vegetable is a mini vegetable
if (sprite_index == spr_turnip_mini)
    vspeed += -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move up, again...

//If the vegetable sprite height is greater than 16, pull slower
if ((sprite_width &gt; 16) &amp;&amp; (sprite_height &gt; 16)) {

    y -= 3;
    alarm[0] = 9;
}

//Otherwise, pull faster
else {

    y--;
    alarm[0] = 3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move up, again...

//If the vegetable sprite height is greater than 16, pull slower
if ((sprite_width &gt; 16) &amp;&amp; (sprite_height &gt; 16)) {

    y -= 3;
    alarm[7] = 9;
}

//Otherwise, pull faster
else {

    y--;
    alarm[7] = 3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move up, again...

//If the vegetable sprite height is greater than 16, pull slower
if ((sprite_width &gt; 16) &amp;&amp; (sprite_height &gt; 16)) {

    y -= 3;
    alarm[6] = 9;
}

//Otherwise, pull faster
else {

    y--;
    alarm[6] = 3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pull out

ready = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move up, then pluck

y -= 2;
alarm[0] = 40;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move up

y -= 2;
alarm[3] = 20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make the vegetable get drawn at a specified y position

if (drawpiece2 &lt; 2) {

    drawpiece2++;
    alarm[1] = 20;
}
else if (drawpiece2 == 2) {

    y += 8;
    alarm[0] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check the frame of the puller object

//If the sprite height is greater than 20, play a 'Pickup' sound
if (sprite_height &gt; 20)
&amp;&amp; (sprite_index != spr_propellerblock)
    audio_play_sound(snd_pickup, 0, false);

//If the vegetable is being drawn
if (drawpiece) {

    //Play 'Break' sound
    audio_play_sound(snd_break, 0, false);
    
    //Do not draw
    drawpiece = 0;
    
    //Create shards
    with (instance_create(x+8,y+8,obj_shard))
        motion_set(45, 6);
    with (instance_create(x+8,y+8,obj_shard))
        motion_set(60, 6);
    with (instance_create(x+8,y+8,obj_shard))
        motion_set(120, 6);
    with (instance_create(x+8,y+8,obj_shard))
        motion_set(135, 6);
}

//Depth
depth = -6;

//Draw it
drawpiece2 = 3;

//If the puller object does exist...
if (instance_exists(obj_puller)) {

    //If the player is not small (Frame 2 and above)
    if (obj_puller.image_index &gt; 1)
        vspeed += -2.5;
        
    //Otherwise, if the player is not big (Frame 1 and below)
    else if (obj_puller.image_index &lt;= 1)
        vspeed += -1.5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pulled vegetable logic

//Destroy if the player does not exist
if (!instance_exists(obj_playerparent)) {

    instance_destroy();
    exit;
}

//If the veggie is almost pulled
if (ready == 2) {

    //If the player does exist
    if (instance_exists(obj_playerparent)) {
    
        //With the player
        with (obj_playerparent) {
        
            visible = 1;
            holding = 0;
            disablecontrol = false
        }
        
        //Destroy puller
        with (obj_puller) instance_destroy();
    }

    //If the vegetable is a bomb
    if (myveggie == obj_turnip_bomb) 
        with (instance_create(obj_playerparent.x,obj_playerparent.y-5,obj_turnip_bomb)) aa = other.aa;
        
    //Otherwise, if the vegetable is a basket sphere
    else if (myveggie == obj_basket_up) {
    
        //Create a held basket sphere
        with (instance_create(obj_playerparent.x,obj_playerparent.y-5,obj_basket_up)) {
        
            image_speed = other.image_speed;
            image_index = other.image_index;
        }
    }
    
    //Otherwise, if the vegetable is a pullable barrel
    else if (myveggie == obj_barrel_up) {

        //If this barrel is explosive, create explosive variant
        if (sprite_index == spr_barrel_tnt_up)        
            with (instance_create(obj_playerparent.x, obj_playerparent.y-5, obj_barrel_up)) sprite_index = spr_barrel_tnt_up;

        //Otherwise
        else
            instance_create(obj_playerparent.x, obj_playerparent.y-5, obj_barrel_up);
    }
    
    //Otherwise, if the vegetable is a pullable mushroom
    else if (myveggie == obj_mushroom)    
        instance_create(obj_playerparent.x,obj_playerparent.y,obj_mushroom);
        
    //Otherwise, if the vegetable is a pullable 1up mushroom
    else if (myveggie == obj_1up)   
        instance_create(obj_playerparent.x,obj_playerparent.y,obj_1up);
        
    //Otherwise, if the vegetable is a crystal ball
    else if (myveggie == obj_crystal_up) {
    
        //If the crystal is a blue one, open red hawkmouth
        if (sprite_index == spr_crystal) {
    
            //Open Hawkmouth's mouth
            with (obj_hawkmouth) {
            
                //Make sure this is the red one
                if (sprite_index == spr_hawkmouth) {
                
                    //Do not animate
                    image_speed = 0;
                    image_index = 1;
                    
                    //Prepare to open the mouth
                    ready = 1;
                    
                    //Play fanfare
                    alarm[0] = 4;
                    
                    //Open hawkmouth mouth.
                    alarm[1] = 120;
                }
            }
        }
        
        //Otherwise, if the crystal is a red one, open blue hawkmouth
        else if (sprite_index == spr_crystal_red) {
    
            //Open Hawkmouth's mouth
            with (obj_hawkmouth) {
            
                //Make sure this is the red one
                if (sprite_index == spr_hawkmouth_secret) {
                
                    //Do not animate
                    image_speed = 0;
                    image_index = 1;
                    
                    //Prepare to open the mouth
                    ready = 1;
                    
                    //Play fanfare
                    alarm[0] = 4;
                    
                    //Open hawkmouth mouth.
                    alarm[1] = 120;
                }
            }
        }       
    }
        
    //Otherwise, pull a veggie
    else {
    
        //If the vegetable is a enemy
        if (enemy) {
        
            with (instance_create(obj_playerparent.x,obj_playerparent.y+11,myveggie)) {
            
                //Hereby same sprite and frame
                sprite_index = other.sprite_index;
                image_xscale = other.xscale;
                
                //Hereby return enemy
                turnback = other.turnback;
                
                //Hereby timers
                aa = other.aa;                
            }
        }
        
        //Otherwise, pull a normal vegetable
        else
            instance_create(obj_playerparent.x,obj_playerparent.y+11,myveggie);
    }
    
    //Destroy
    instance_destroy();
}

//Set the y position of the turnip
if (((bbox_bottom &lt; obj_playerparent.bbox_top+14) &amp;&amp; (global.powerup == cs_small))
|| ((bbox_bottom &lt; obj_playerparent.bbox_top+20) &amp;&amp; (global.powerup &gt;= cs_big)))
&amp;&amp; (ready == 0) {

    //Set the plucking sprite
    with (obj_puller) {
    
        sprite_index = scr_mario_duck();
    }

    //Pull out
    alarm[4] = 7;
    ready = 1;
    
    //Stop vertical movement
    vspeed = 0;
    
    //If the player is not small
    if (global.powerup &gt;= cs_big)
        y = obj_playerparent.bbox_top-2;
    
    //Otherwise, if the player is small
    else if (global.powerup == cs_small)
        y = obj_playerparent.bbox_top-6;
}

//If the player does not exist...
if (!instance_exists(obj_playerparent))
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw vegetable

if ((drawpiece) &amp;&amp; (ready &lt; 2)) {

    if (drawpiece2 == 0)
        draw_sprite_part_ext(sprite_index,-1,0,0,sprite_width,3,x-8,y+5,1,1,c_white,1)
    else if (drawpiece2 == 1)
        draw_sprite_part_ext(sprite_index,-1,0,0,sprite_width,6,x-8,y+2,1,1,c_white,1)
    else if (drawpiece2 == 2)
        draw_sprite_part_ext(sprite_index,-1,0,0,sprite_width,9,x-8,y-1,1,1,c_white,1)
}
else {

    if (drawpiece2 == 3)
        draw_sprite_ext(sprite_index,-1,x,y,xscale,1,0,c_white,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
