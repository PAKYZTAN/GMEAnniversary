<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_yoshi</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Yoshi

//Default colour
colour = 0;
if (global.mountcolour != 0) {

    colour = global.mountcolour;
}

//On yoshi
global.mount = 1;

//Is Yoshi licking?
licking = 0;

//Is Yoshi's tongue locked in position
locked = false;

//Facing direction
xscale = 1;

//What's inside Yoshi's mouth?
mouthholder = noone;

//Sprite of the item inside Yoshi's mouth
mouthsprite = noone;

//Enemy inside the held item
mouthnumb = 0;

//Whether Yoshi has ate a powerup
powerup = noone;

//Whether Yoshi has ate a berry
berry = noone;

//Animation
anim = 0;

//Is Yoshi jumping?
jumping = 0;

//Is Yoshi flying?
flying = 0;

//Flying animation
flyanim = 0;

//Flutter
flutter = 0;

//Flutter limit
fluttertime = 0;

//Player's current frame
f = 0;

//Player's y position
myy = 0;

//Player's previous state
stateprev = 0;

//If an item was carried from the previous room.
if (global.carrieditem != noone) {

    //Remember the item and reset it.
    mouthholder = global.carrieditem;
    global.carrieditem = noone;
    
    //Remember the sprite and reset it.
    mouthsprite = global.carriedsprite;
    global.carritedsprite = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy Yoshi

if (instance_exists(obj_keyhole))
&amp;&amp; (obj_keyhole.ready != 0)
exit;

//Dismount Yoshi
global.mount = 0;

//Stop 'Flying' sound
audio_stop_sound(snd_yoshi_lick);

//Stop 'Flutter' sound
audio_stop_sound(snd_yoshi_hover);

//Destroy Yoshi's tongue if it exists
with (obj_tongue) instance_destroy();

//Make both the player and yoshi do stuff
if (instance_exists(obj_playerparent)) {

    obj_playerparent.holding = 0;
    obj_playerparent.visible = 1;
    if (mouthholder != noone)
        event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make yoshi lay a egg

//Make sure the player state is not the jumping one
if (instance_exists(obj_playerparent))
&amp;&amp; (obj_playerparent.state &lt; 2) {

    with (instance_create(x-8,y,obj_egg_pow)) {
    
        //Check of what colour is yoshi and set up the sprite of the egg
        switch (obj_yoshi.colour) {
        
            //Green Yoshi
            case (0): sprite_index = spr_egg; break;
            
            //Red Yoshi
            case (1): sprite_index = spr_egg_r; break;
            
            //Yellow Yoshi
            case (2): sprite_index = spr_egg_y; break;
            
            //Blue Yoshi
            case (3): sprite_index = spr_egg_b; break;
            
            //Teal Yoshi
            case (4): sprite_index = spr_egg_t; break;
            
            //Pink Yoshi
            case (5): sprite_index = spr_egg_p; break;
        }
        
        //Set the horizontal speed
        hspeed = -1*sign(other.image_xscale);
    }
}

//Otherwise, wait...
else
    alarm[6] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Allow flutter

flutter = 0;
if (fluttertime &gt; 0)
    fluttertime = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make flying noises for blue Yoshi

if (flying) {

    //Stop and Play 'Lick' sound
    audio_stop_sound(snd_yoshi_lick);
    audio_play_sound(snd_yoshi_lick, 0, false);
    
    //Repeat
    alarm[3] = 5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Finish licking

//End licking
licking = 0;

//If Yoshi ate a powerup, create it.
if (powerup != noone) {

    //Create eaten powerup
    instance_create(x,y,powerup);
    
    //Reset eaten powerup
    powerup = noone;
}
    
//If Yoshi are a berry, count up until he eats 10
else if (berry != noone) {

    //If the berry eaten is a green one, extend time for 20 seconds.
    if (berry == spr_berry_g) {
    
        //Play 'Collect' sound
        audio_play_sound(snd_collect, 0, false);
    
        //Extend time
        with (instance_create(x-8,y-26,obj_score)) event_user(13);       
    }
    
    //Otherwise if the berry eaten is a red one, increment count till 5 berries are eaten.
    else if (berry == spr_berry) {
    
        //Increment berry number
        global.berries++;
        
        //Make yoshi lay a egg if he eats enough berries
        if (global.berries == 5) {
        
            //Make Yoshi lay a egg
            alarm[5] = 1;
        
            //Show how many berries yoshi ate
            with (instance_create(x,y-26,obj_score_coins)) {
            
                amount = global.berries;
                alarm[0] = 12;
            }
            
            //Reset berry counter
            global.berries = 0;
        }
        
        //Create a number and make it flash if 5 berries were eaten
        else {
                    
            //Show how many berries yoshi ate
            with (instance_create(x,y-26,obj_score_coins)) 
                amount = global.berries;
        }
    }
    
    //Play 'Coin' sound
    audio_play_sound(snd_coin, 0, false);
    
    //Increment coins
    global.coins++;
    
    //Reset eaten berry
    berry = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Begin finishing the licking process

anim = 0;
alarm[2] = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start licking

//Set animation
anim = 1;

//Create tongue
instance_create(x,y,obj_tongue);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Yoshi logic

//If the player does exist.
if (instance_exists(obj_playerparent)) {

    //Snap into the player
    x = obj_playerparent.x;
    y = obj_playerparent.y;
    
    //Force the player to be invisible
    obj_playerparent.visible = 0;
    
    //Force the player to hold something
    obj_playerparent.holding = 4;
        
    //If Yoshi is not licking and control is pressed.
    if (keyboard_check_pressed(global.controlkey))
    &amp;&amp; (licking == 0)
    &amp;&amp; (obj_playerparent.disablecontrol == 0) {
    
        //If the mouth is empty, start licking.
        if (mouthholder == noone) {
        
            //Play 'Lick' sound
            if (!audio_is_playing(snd_yoshi_lick)) {
            
                audio_play_sound(snd_yoshi_lick, 0, false);
            }
            
            //Start licking
            licking = 1;
            alarm[0] = 5;
            
            //Animation
            anim = 0;
            
            //Lock the tounge in position
            if ((keyboard_check(global.upkey)) || (jumping &gt; 0)) {
            
                //If the player is not crouched down
                if (!obj_playerparent.crouch)
                    locked = 1;
                else
                    locked = 2;
            }
            else
                locked = 2;
        }
        
        //Otherwise, spit out the item.
        else
            event_user(0);
    }
    
    //Make Yoshi flutter if moving down and if the player does not have either the raccoon or tanooki powerup
    if (keyboard_check(global.shiftkey))
    &amp;&amp; (flying == 0)
    &amp;&amp; (global.powerup != cs_leaf)
    &amp;&amp; (global.powerup != cs_tanooki)
    &amp;&amp; (obj_playerparent.crouch == false)
    &amp;&amp; (obj_playerparent.swimming == false) {
    
        //If Yoshi can flutter and it is moving down
        if (flutter == 0)
        &amp;&amp; (obj_playerparent.yspeed &gt;= 2.5) {
        
            //Play 'Hover' sound
            audio_play_sound(snd_yoshi_hover, 0, false);
         
            //Allow fluttering   
            flutter = 1;
        }
            
        //If Yoshi is fluttering
        else if (flutter = 1) {
        
            //Increment flutter time
            fluttertime += 2;
            
            //If flutter time is lower than 120
            if (fluttertime &lt; 120) {
            
                //Make the player ascend
                with (obj_playerparent) {
                
                    //Disable gravity
                    ygrav = 0;
                
                    //Increment vertical movement
                    if (yspeed &gt; 0)
                        yspeed -= 0.15;
                    else {
                    
                        yspeed -= 0.05;
                        if (yspeed &lt; -1.5)
                            yspeed = -1.5;
                    }
                }
            }
            else {
            
                //Stop 'Hover' sound
                audio_stop_sound(snd_yoshi_hover);
            
                //End flutter
                flutter = 2;
                
                //Allow flutter after a while
                alarm[4] = 30;
            }
        }
    }
    else if (flutter == 1) 
    || (obj_playerparent.yspeed &lt; -1.6) {
            
        //Stop 'Hover' sound
        audio_stop_sound(snd_yoshi_hover);
            
        //End flutter
        flutter = 2;
        
        //Allow flutter after a while
        alarm[4] = 30;
    }
    
    //Force end flutter if not jumping
    if (flutter == 1)
    &amp;&amp; (obj_playerparent.state != 2) {
            
        //Stop 'Hover' sound
        audio_stop_sound(snd_yoshi_hover);
            
        //End flutter
        flutter = 2;
        
        //Allow flutter after a while
        alarm[4] = 30;
    }
    
    //Depth
    depth = -4;
    
    //Manage Yoshi state
    if (mouthholder)
        event_user(3);
    
    //Mask
    obj_playerparent.mask_index = spr_bigmask;
    
    //Check if the player is jumping and make yoshi set up his jump pose if so.
    if ((obj_playerparent.state == 2) || (obj_playerparent.delay &gt; 0))    
        jumping = 1;
        
    //Otherwise, if the player is not jumping
    else {
    
        //Stop 'Hover' sound
        audio_stop_sound(snd_yoshi_hover);
        
        //End jumping
        jumping = 0;
        
        //Allow fluttering        
        flutter = 0;
        if (fluttertime &gt; 0)
            fluttertime = 0;
    }
}

//Otherwise, if the player does not exist.
else {

    //Do not hold anything if the player cleared a level
    if (instance_exists(obj_playerparent_clear)) {
    
        if (mouthholder != noone) {
        
            mouthholder = noone;
            mouthsprite = noone;
        }
    }

    //Find a suitable player
    event_user(15);
    
    //If said player object exists, follow him
    if (instance_exists(follow)) {
    
        //Snap onto this object
        x = follow.x;
        y = follow.y;
        
        //Set the same depth as the other object
        depth = follow.depth;
    }
}

//Stop 'Flutter' sound if yoshi is not fluttering
if (flutter != 1)
&amp;&amp; (audio_is_playing(snd_yoshi_hover))
    audio_stop_sound(snd_yoshi_hover);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Yoshi animation

//If the player does exist.
if (instance_exists(obj_playerparent)) {

    //If yoshi is licking.
    if (licking) {
    
        //If the 'Up' key is being held or Yoshi is jumping.
        if (locked == 1) {
        
            //If yoshi is fluttering
            if (flutter == 1) {
            
                //Set the sprite
                sprite_index = spr_yoshi_flutter_lick;                         
                
                //Animate
                image_speed = 0.3;                    
            }
            
            //Otherwise
            else {
            
                //Set the sprite
                sprite_index = spr_yoshi_swallow;
                
                //Do not animate
                image_speed = 0;
                
                //Set the frame
                if (obj_playerparent.yspeed != 0) {
                
                    if (obj_playerparent.yspeed &lt; 0)
                        image_index = 1;
                    else if (obj_playerparent.yspeed &gt; 0)
                        image_index = 2;
                }
                else
                    image_index = 0;
            }
        }
            
        //Otherwise, if the player is not moving vertically
        else {
            
            //Set the sprite
            sprite_index = spr_yoshi_lick;
            
            //Do not animate
            image_speed = 0;
            
            //Set the frame
            image_index = anim;
        }
    }
    
    //Otherwise, if Yoshi is not licking.
    else if (!licking) {
    
        //If the player is crouched down or it's sliding down a slope.
        if (obj_playerparent.crouch) 
        || (obj_playerparent.sliding) {
        
            //If Yoshi is holding something on his mouth.
            if (mouthholder != noone) {
            
                //Set the sprite
                sprite_index = spr_yoshi_fm_wait;
        
                //Do not animate
                image_speed = 0;
                image_index = 2;
            }
            
            //Otherwise, if Yoshi is not holding anything on his mouth.
            else if (mouthholder == noone) {
            
                //Set the sprite
                sprite_index = spr_yoshi_wait;
                
                //Do not animate
                image_speed = 0;
                image_index = 0;
            }
        }
        
        //Otherwise, if the player is not crouched down.
        else {
    
            //If the player is idle.
            if (obj_playerparent.state == 0) {
            
                //If Yoshi is holding something on his mouth.
                if (mouthholder != noone) {
                
                    //Set the sprite
                    sprite_index = spr_yoshi_fm;
                    
                    //Do not animate
                    image_speed = 0;
                    image_index = 0;
                }
                
                //Otherwise, if Yoshi is not holding anything on his mouth.
                else if (mouthholder == noone) {
                
                    //Set the sprite
                    sprite_index = spr_yoshi;
                    
                    //Do not animate
                    image_speed = 0;
                    image_index = 0;                
                }
            }
            
            //Otherwise, if the player is moving.
            else if (obj_playerparent.state == 1) {
            
                //If Yoshi is holding something on his mouth.
                if (mouthholder != noone) {
                
                    //Set the sprite
                    sprite_index = spr_yoshi_fm;
                    
                    //Animate
                    if (!collision_rectangle(obj_playerparent.bbox_left,obj_playerparent.bbox_bottom,obj_playerparent.bbox_right,obj_playerparent.bbox_bottom,obj_slippery,0,1))
                        image_speed = 0.065+abs(obj_playerparent.xspeed)/7.5;
                    else
                        image_speed = 0.130+abs(obj_playerparent.xspeed)/7.5;
                }
                
                //Otherwise, if Yoshi is not holding anything on his mouth.
                else if (mouthholder == noone) {
                
                    //Set the sprite
                    sprite_index = spr_yoshi;
                    
                    //Animate
                    if (!collision_rectangle(obj_playerparent.bbox_left,obj_playerparent.bbox_bottom,obj_playerparent.bbox_right,obj_playerparent.bbox_bottom,obj_slippery,0,1))
                        image_speed = 0.065+abs(obj_playerparent.xspeed)/7.5;
                    else
                        image_speed = 0.130+abs(obj_playerparent.xspeed)/7.5;                    
                }
            }
            
            //Otherwise, if the player is moving upwards.
            else if (obj_playerparent.state == 2) {
            
                //If Yoshi is holding something on his mouth.
                if (mouthholder != noone) {
                
                    //If Yoshi is fluttering
                    if (flutter == 1) {
                    
                        //Set the sprite
                        sprite_index = spr_yoshi_fm_flutter;
                        
                        //Animate
                        image_speed = 0.3;
                    }
                    else {
                
                        //Set the sprite
                        sprite_index = spr_yoshi_fm_jump;
                        
                        //Do not animate
                        image_speed = 0;
                        
                        //Set the frame
                        if (obj_playerparent.yspeed &lt; 0)
                            image_index = 0;
                        else
                            image_index = 1;
                    }
                }
                
                //Otherwise, if Yoshi is not holding anything on his mouth.
                else if (mouthholder == noone) {
                
                    //If Yoshi is fluttering
                    if (flutter == 1) {
                    
                        //Set the sprite
                        sprite_index = spr_yoshi_flutter;                         
                        
                        //Animate
                        image_speed = 0.3;                                      
                    }
                    
                    else {
                    
                        //Set the sprite
                        sprite_index = spr_yoshi_jump;
                        
                        //Do not animate
                        image_speed = 0;
                        
                        //Set the frame
                        if (obj_playerparent.yspeed &lt; 0)
                            image_index = 0;
                        else
                            image_index = 1;   
                    }                                 
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player animation

//If the player does exist
if (instance_exists(obj_playerparent)) {

    //Set the position
    x = obj_playerparent.x;
    y = obj_playerparent.y;
    
    //If Yoshi is extending it's tongue
    if (licking) {
    
        //If the player has either the raccoon or tanooki powerup
        if (global.powerup == cs_leaf) || (global.powerup == cs_tanooki) {
        
            //If Yoshi is jumping
            if (jumping == 0) {
            
                //If Yoshi is crouching to lick something
                if (sprite_index == spr_yoshi_lick)
                    f = 4+obj_playerparent.wiggle/4;
                else
                    f = 0+obj_playerparent.wiggle/4;
            }
            
            //Otherwise
            else {
            
                if (locked == 2)
                    f = 4+obj_playerparent.wiggle/4;
                else
                    f = 0+obj_playerparent.wiggle/4;
            }
        }
        
        //Otherwise, if the player does not have any of the above powerups.
        else {
        
            //If Yoshi is not jumping
            if (jumping == 0) {
                
                //If Yoshi is crouching to lick something
                if (sprite_index == spr_yoshi_lick)
                    f = 1;
                else
                    f = 0;
            }
            
            //Otherwise
            else {
            
                if (locked == 2)
                    f = 1;
                else
                    f = 0;
            }
        }
    }
    
    //Otherwise, if Yoshi is not extending it's tongue
    else {
    
        //If the player has either the raccoon or tanooki powerup.
        if (global.powerup == cs_leaf) || (global.powerup == cs_tanooki) {
        
            //If the player is crouched down or sliding down a slope
            if (obj_playerparent.crouch) || (obj_playerparent.sliding)
                f = 4+obj_playerparent.wiggle/4;
            
            //Otherwise...
            else            
                f = 0+obj_playerparent.wiggle/4;
        }
    
        else {
        
            //If the player is crouched down or sliding down a slope
            if (obj_playerparent.crouch) || (obj_playerparent.sliding) 
                f = 1;
    
            //Otherwise, set the default frame
            else          
                f = 0;
        }
    }
    
    //Set the depth
    depth = -5;
    
    //Set the facing direction
    image_xscale = obj_playerparent.xscale;
}

//Set up the y position for Mario
if (sprite_index == spr_yoshi)
|| (sprite_index == spr_yoshi_fm) {

    if (image_index &gt; 0.99)
        myy = 1;
    else
        myy = 0;
}
else
    myy = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check what item is holding the item

//Check 'Warp'
if (instance_exists(obj_player_warp))
    follow = obj_player_warp;
    
//Check 'Jump'
else if (instance_exists(obj_player_jump))
    follow = obj_player_jump;
    
//Check 'Warpnote'
else if (instance_exists(obj_player_warpnote))
    follow = obj_player_warpnote;
    
//Reset to default
else
    follow = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check what shell does have yoshi on his mouth and give abilities

if (mouthholder == obj_shell) 
&amp;&amp; (instance_number(obj_tongue) == 0) {
    
    //If the shell held in the mouth is a kamikaze one
    if (mouthsprite == spr_koopa_black) {
            
        //If 'Shift' is being held outside water
        if (keyboard_check(global.shiftkey)) 
        &amp;&amp; (obj_playerparent.swimming == false) {
        
            //If not flying and moving down, start flying.
            if (!flying)
            &amp;&amp; (obj_playerparent.yspeed &gt; 0) {
            
                flying = 1;
                alarm[3] = 1;
            }
            
            //When flying
            if (flying) {
            
                //With the player
                with (obj_playerparent) {
                
                    //If there's not a ceiling above the player, move up
                    if (!collision_rectangle(bbox_left,bbox_top-3,bbox_right,bbox_top,obj_solid,0,0))
                    &amp;&amp; (!collision_rectangle(bbox_left,bbox_top-3,bbox_right,bbox_top,obj_ceilslopeparent,1,0)) {
                    
                        yspeed += -0.5;
                        if (yspeed &lt; -1.5)
                            yspeed = -1.5;
                    }
                }
                
                //Animate wing
                if (global.pwing == 0)
                    flyanim += 0.25;
                else
                    flyanim = 0;
            }
            
            //Otherwise, reset fly animation
            else
                flyanim = 0;
        }
        
        //Otherwise, reset flight
        else {
        
            audio_stop_sound(snd_yoshi_lick);
            flying = 0;
            flyanim = 0;
        }

        //If the player lands after a jump, stomp
        if (stateprev == 2)
        &amp;&amp; (obj_playerparent.state != 2)        
            instance_create(x,y,obj_stomp);
    }
    
    //If yoshi has a yellow shell in mouth
    if (colour == 2)
    || (mouthsprite == spr_shell_yellow_down) {
                    
        //If the player lands after a jump, stomp
        if (stateprev == 2)
        &amp;&amp; (obj_playerparent.state != 2)        
            instance_create(x,y,obj_stomp);
    }
    
    //If yoshi has a blue shell in mouth
    if (colour == 3) 
    || (mouthsprite == spr_shell_blue_down) {
    
        //If 'Shift' is being held outside water
        if (keyboard_check(global.shiftkey)) 
        &amp;&amp; (obj_playerparent.swimming == false) {
        
            //If not flying and moving down, start flying.
            if (!flying)
            &amp;&amp; (obj_playerparent.yspeed &gt; 0) 
            &amp;&amp; (obj_playerparent.flying = 0) {
            
                flying = 1;
                alarm[3] = 1;
            }
            
            //When flying
            if (flying) {
            
                //With the player
                with (obj_playerparent) {
                
                    //If there's not a ceiling above the player, move up
                    if (!collision_rectangle(bbox_left,bbox_top-3,bbox_right,bbox_top,obj_solid,0,0))
                    &amp;&amp; (!collision_rectangle(bbox_left,bbox_top-3,bbox_right,bbox_top,obj_ceilslopeparent,1,0)) {
                    
                        yspeed += -0.5;
                        if (yspeed &lt; -1.5)
                            yspeed = -1.5;
                    }
                }
                
                //Animate wing
                if (global.pwing == 0)
                    flyanim += 0.25;
                else
                    flyanim = 0;
            }
            
            //Otherwise, reset fly animation
            else
                flyanim = 0;
        }
        
        //Otherwise, reset flight
        else {
        
            audio_stop_sound(snd_yoshi_lick);
            flying = 0;
            flyanim = 0;
        }    
    }    
}

//Remember last state
stateprev = obj_playerparent.state;    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the player

//Set the palette
pal_swap_set(spr_palette_mario, obj_playerparent.isflashing);

//Draw the player
switch (global.player) {

    //Mario
    case (0): draw_sprite_ext(scr_mario_ride(),f,round(x),round(y)+1+myy,obj_playerparent.xscale,1,0,c_white,obj_playerparent.image_alpha); break;
}

//Reset palette
pal_swap_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Abandon yoshi

with (instance_create(x,y,obj_yoshi_abandon)) {

    //Hereby the same colour
    colour = other.colour;

    //If Yoshi was holding an item on his mouth
    if (other.mouthholder != noone) {
    
        image_index = 1;
        alarm[1] = 16;
    }
    
    //Vertical speed
    vspeed = 1;
    
    //Move the player up
    obj_playerparent.y -= 16;

    //Set the frame
    if (instance_exists(obj_playerparent)) {
    
        //Hereby horizontal speed
        hspeed = obj_playerparent.xspeed/2;
    
        //Hereby facing direction
        xscale = obj_playerparent.xscale;
    }
}

//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spit out an item

//Play 'Spit' sound
audio_play_sound(snd_yoshi_spit, 0, false);

//Spit out the item
if (obj_playerparent.crouch) 
|| (obj_playerparent.sliding) {

    //If the item held is a koopa shell, turn into a kicked koopa shell
    if (mouthholder == obj_shell) {
    
        if (colour == 1)
        || (mouthsprite == spr_koopa_black)
        || (mouthsprite == spr_shell_red_down)
            mouthholder = obj_yoshi_fire;
    }

    //Lock it
    locked = 2;
    
    //If there's fire inside yoshi's mouth
    if (mouthholder == obj_yoshi_fire) {
    
        //Play 'Flames' sound
        audio_play_sound(snd_flames, 0, false);
        
        //Make yoshi fire
        instance_create(x+(10*obj_playerparent.xscale),y-12,obj_yoshi_fire);
        with (instance_create(x+(10*obj_playerparent.xscale),y-12,obj_yoshi_fire)) 
            vspeed = 1;
        with (instance_create(x+(10*obj_playerparent.xscale),y-12,obj_yoshi_fire)) 
            vspeed = -1;         
    }
    
    //Otherwise, spit a item
    else {

        //Create up an item
        with (instance_create(x+(10*obj_playerparent.xscale),y-12,mouthholder)) {
        
            //Use the correct sprite
            sprite_index = other.mouthsprite;
            
            //If the eaten item is a throwable brick.
            if (sprite_index == spr_bluebrick_th) 
            || (sprite_index == spr_redbrick_th) 
            || (sprite_index == spr_graybrick_th) {
                
                //Set the animation speed
                image_speed = 0.5;
            }
            
            //Set the horizontal speed
            hspeed = 0.5*obj_playerparent.xscale;
        }
    }
}
else {

    //If the item held is a koopa shell, turn into a kicked koopa shell
    if (mouthholder == obj_shell) {
    
        if (colour == 1)
        || (mouthsprite == spr_koopa_black)
        || (mouthsprite == spr_shell_red_down)
            mouthholder = obj_yoshi_fire;
        else
            mouthholder = obj_shell_kick;
    }

    //Lock it
    locked = 1;
    
    //If there's fire inside yoshi's mouth
    if (mouthholder == obj_yoshi_fire) {
    
        //Play 'Flames' sound
        audio_play_sound(snd_flames, 0, false);
        
        //Make yoshi fire
        instance_create(x+(10*obj_playerparent.xscale),y-16,obj_yoshi_fire);
        with (instance_create(x+(10*obj_playerparent.xscale),y-16,obj_yoshi_fire)) 
            vspeed = 1;
        with (instance_create(x+(10*obj_playerparent.xscale),y-16,obj_yoshi_fire)) 
            vspeed = -1;         
    }
    
    //Otherwise, if there's a turnip inside yoshi's mouth
    else if (mouthholder == obj_turnip) {
    
        //Create a turnip
        with (instance_create(x+(10*obj_playerparent.xscale),y-16,obj_turnip)) {
        
            //Use the correct sprite
            sprite_index = other.mouthsprite;
        
            //Set the motion
            hspeed = 3*obj_playerparent.xscale;
            vspeed = 0.1;
            
            //Set gravity
            gravity = 0.2;
            
            //Do not held the item
            held = false;
        }
    }
    
    else {
    
        //Create up an item
        with (instance_create(x+(10*obj_playerparent.xscale),y-16,mouthholder)) {
        
            //Use the correct sprite
            sprite_index = other.mouthsprite;
            
            //Set the correct direction
            dir = other.image_xscale;
            
            //If the eaten item is a throwable brick
            if (sprite_index == spr_bluebrick_th) 
            || (sprite_index == spr_redbrick_th) 
            || (sprite_index == spr_graybrick_th) {
                
                //Set the horizontal speed.
                hspeed = 2.7*obj_playerparent.xscale;
                
                //Set the animation speed
                image_speed = 0.5;
                
                //Get thrown
                ready = 1;
                
                //Do not destroy
                alarm[0] = -1;
                alarm[1] = -1;
                
                //If the object is in contact with a solid.
                if (place_meeting(x,y,obj_solid))
                    event_user(0);
            }
            
            //Otherwise, if the eaten item is a ice block
            else if (sprite_index == spr_iceblock) {
            
                //Set the horizontal speed
                hspeed = 2.7*obj_playerparent.xscale;
                
                //Get thrown
                ready = 1;
                
                //Do not destroy
                alarm[0] = -1;
                alarm[1] = -1;
                
                //If the object is in contact with a solid.
                if (place_meeting(x,y,obj_solid))
                    event_user(0);
            }
            
            //Otherwise if the eaten item is a shell
            else if (sprite_index == spr_shell_down) 
            || (sprite_index == spr_shell_blue_down) 
            || (sprite_index == spr_shell_yellow_down) {
                            
                //Set the horizontal speed
                prevhspeed = 2.7*obj_playerparent.xscale;
                hspeed = 2.7*obj_playerparent.xscale;
                
                //Get thrown
                ready = 1;
                
                //If the object is in contact with a solid.
                if (place_meeting(x,y,obj_solid))
                    event_user(0);            
            }
            
            //Otherwise, spit a regular item
            else {
    
                //If the eaten item is not overlapping a solid.
                if (!collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_solid,0,0)) {
                
                    //Set the motion when swimming.
                    if (collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_swim,0,0)) {
                    
                        if (!collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_slopeparent,1,0))
                            hspeed = obj_playerparent.xspeed+0.75*obj_playerparent.xscale;
                        else
                            hspeed = 1*obj_playerparent.xscale;                
                    }
                    
                    //Otherwise, set the motion when NOT swimming.
                    else {
                    
                        if (!collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_slopeparent,1,0))
                            hspeed = obj_playerparent.xspeed+1.5*obj_playerparent.xscale;
                        else
                            hspeed = 2*obj_playerparent.xscale;                
                    }
                }
                
                //Make the item get not stuck on a solid.
                else
                    inwall = true;
            }
        }
    }
}

//Reset mouth item
mouthholder = noone;

//Reset item sprite
mouthsprite = noone;

//Licking
licking = 1;

//Stop licking
alarm[2] = 5;

//Lick animation
anim = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Remember colour and held item

global.mountcolour = colour;
global.carrieditem = mouthholder;
global.carriedsprite = mouthsprite;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Yoshi and the current player

//If the player exists
if (instance_exists(obj_playerparent)) {
    
    //Set palette
    pal_swap_set(spr_palette_yoshi, colour);
    
    //Draw Yoshi
    draw_sprite_ext(sprite_index, -1, round(x)+obj_playerparent.shake, round(y)+1, image_xscale, 1, 0, c_white, 1);
    
    //Reset shader
    pal_swap_reset();

    //Draw the player
    event_user(2);
    
    //Draw yoshi's wing
    if (mouthholder == obj_shell) 
    &amp;&amp; (instance_number(obj_tongue) == 0) {
    
        if (colour == 3)
        || (mouthsprite == spr_koopa_black)
        || (mouthsprite == spr_shell_blue_down)
            draw_sprite_ext(spr_wing, flyanim, round(x), round(y)+1+(3*obj_playerparent.crouch), image_xscale, 1, 0, c_white, 1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
