<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_kuriboshoe</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A shoe that the player can ride

//On shoe
global.mount = 2;

//Do not animate
image_speed = 0;

//Offset values
offset = 0

//Manage offset values
alarm[0] = 2

//Create smoke effect
alarm[1] = 4;

//The player's previous state
stateprev = 0;

//Is the jugemu shoe flying?
flying = 0;

//Use correct shoe sprite
switch (global.mountcolour) {

    //Baburu Shoe
    case (1): sprite_index = spr_baburushoe; break;
    
    //Dossun Shoe
    case (2): sprite_index = spr_dossunshoe; break;
    
    //Jugemu Shoe
    case (3): sprite_index = spr_jugemushoe; break;
        
    //Pentaro Shoe
    case (4): sprite_index = spr_pentaroshoe; break;
}

//Movement
movement = instance_create(0,0,obj_kuriboshoe_movement);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy shoe

//Dismount shoe
global.mount = 0;

//Stop 'Flying' sound
audio_stop_sound(snd_yoshi_lick);

//Destroy movement
with (movement) instance_destroy();

//Make both the player and yoshi do stuff
if (instance_exists(obj_playerparent)) {

    obj_playerparent.holding = 0;
    obj_playerparent.visible = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create smoke effect if in contact with lava

//If the shoe is in contact with lava
var lava = collision_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_bottom+7,obj_lava,1,0)
if (lava) {
    
    if (movement.gravity == 0)
    &amp;&amp; (sprite_index == spr_baburushoe) {
    
        alarm[1] = 2;
        with (instance_create(x-8+random(16),y+14,obj_smoke)) {
        
            sprite_index = spr_smoke_c;
            motion_set(90,random(1.5));
        }
    }
    else
        alarm[1] = 1;
}
else
    alarm[1] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make flying noises for jugemu's shoe

if (flying) {

    //Stop and Play 'Lick' sound
    audio_stop_sound(snd_yoshi_lick);
    audio_play_sound(snd_yoshi_lick, 0, false);
    
    //Repeat
    alarm[0] = 9;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shoe logic

//If the player exists
if (instance_exists(obj_playerparent)) {

    //Snap to position
    x = obj_playerparent.x;
    y = obj_playerparent.y;
    
    //Force the player to be invisible, hold and spin jump
    with (obj_playerparent) {
    
        visible = 0;
        holding = 4;
        stompstyle = 1;
    }
    
    //If the player is standing
    if (obj_playerparent.state == 0)
        image_index = 0;
        
    //Otherwise, if the player is walking or the jugemu shoe is flying, animate.
    else if ((obj_playerparent.state == 1) || ((global.mountcolour = 3) &amp;&amp; (flying == 1))) {
    
        if (flying)
            image_speed = 0.25;
        else
            image_speed = 0.15;
    }
        
    //Otherwise, use second image
    else
    image_index = 1;

    //If the player is on a Dossun shoe
    if (global.mountcolour == 2) {
    
        //If the player lands after a jump, stomp
        if (stateprev == 2) 
        &amp;&amp; (obj_playerparent.state != 2)
        &amp;&amp; (!collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_quicksand, 0, 0))
            instance_create(x,y,obj_stomp);
        
        //Remember last state
        stateprev = obj_playerparent.state;
    }
    
    //If the player is on a Jugemu shoe
    if (global.mountcolour == 3) {
    
        //If 'Shift' is being held outside water
        if ((keyboard_check(global.shiftkey)) &amp;&amp; (obj_playerparent.swimming == false)) {
        
            //If not flying and moving down, start flying.
            if (!flying)
            &amp;&amp; (obj_playerparent.yspeed &gt; 0) {
            
                flying = 1;
                alarm[0] = 1;
            }
            
            //When flying
            if (flying) {
            
                //With the player
                with (obj_playerparent) {
                
                    //If there's not a ceiling above the player, move up
                    if (!collision_rectangle(bbox_left,bbox_top-3,bbox_right,bbox_top,obj_solid,0,0))
                    &amp;&amp; (!collision_rectangle(bbox_left,bbox_top-3,bbox_right,bbox_top,obj_ceilslopeparent,1,0)) {
                    
                        yspeed += -0.5;
                        if (yspeed &lt; -1.5)
                            yspeed = -1.5;
                    }
                }
            }        
        }
        
        //Otherwise, stop flying
        else
            flying = false;
    }
    
    //Set depth
    depth = -5;
}

//Otherwise, if the player does not exist.
else {

    //Find a suitable player
    event_user(15);
    
    //If said player object exists, follow him
    if (instance_exists(follow)) {
    
        //Snap onto this object
        x = follow.x;
        y = follow.y;
        
        //Set the same depth as the other object
        depth = follow.depth;
    }
}

//If the player just died, destroy
if (instance_exists(obj_player_dead))
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check what item is holding the item

//Check 'Warp'
if (instance_exists(obj_player_warp))
    follow = obj_player_warp;
    
//Check 'Jump'
else if (instance_exists(obj_player_jump))
    follow = obj_player_jump;
    
//Check 'Warpnote'
else if (instance_exists(obj_player_warpnote))
    follow = obj_player_warpnote;
    
//Reset to default
else
    follow = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get off the shoe

with (instance_create(x,y,obj_getshoe)) {

    //Use correct shoe sprite
    switch (global.mountcolour) {
    
        //Baburu Shoe
        case (1): sprite_index = spr_baburushoe; break;
        
        //Dossun Shoe
        case (2): sprite_index = spr_dossunshoe; break;
        
        //Jugemu Shoe
        case (3): sprite_index = spr_jugemushoe; break;
        
        //Pentaro Shoe
        case (4): sprite_index = spr_pentaroshoe; break;
    }
    
    //Disallow pick up
    canpick = 0;
    
    //Allow it after a while
    alarm[0] = 60;
    
    //Move the player up
    obj_playerparent.y -= 16;
    
    //Set the facing direction
    if (instance_exists(obj_playerparent)) {
    
        //Hereby horizontal speed
        hspeed = obj_playerparent.xspeed/2;
    
        //Hereby facing direction
        dir = obj_playerparent.xscale;
    }
}

//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the shoe

if (instance_exists(obj_playerparent)) {
    
    //Set the shader
    pal_swap_set(spr_palette_mario, obj_playerparent.isflashing);
    
    //Only draw if the player is not crouched down
    if (obj_playerparent.crouch == false) {
    
        //Draw the player inside the shoe
        switch (global.player) {
        
            //Mario
            case (0): draw_sprite_ext(spr_mario_shoe, global.powerup, round(x), round(y)-15+(movement.y), obj_playerparent.xscale, 1, 0, c_white, 1); break;
        }
    }
    
    //Reset shader
    pal_swap_reset();
    
    //Draw the shoe on front
    draw_sprite_ext(sprite_index,-1,round(x),round(y)+1+(movement.y),obj_playerparent.xscale,1,0,c_white,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
