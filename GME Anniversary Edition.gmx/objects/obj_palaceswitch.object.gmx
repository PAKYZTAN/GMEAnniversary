<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_palaceswitch_y</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>9</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Switch Palace

/*
**  This item uses creation code!
**
**  sprite_index = The switch of your choice
*/

//Do not animate
image_speed = 0;
image_index = 0;

//Whether the switch is pressed
ready = 0;

//Stay in ground
y++;

//Stream
stream = -1;

//Make solid mask
mysolid = instance_create(x,y,obj_solid);
    mysolid.image_xscale = 2;
    mysolid.image_yscale = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Return to the map

if (instance_number(obj_fadein) == 0) {

    with (instance_create(0,0,obj_fadein))
        target = rm_map;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Switch Palace logic

//If the switch has not been pressed yet
if (ready == 0) {

    //Check for the player object
    var player = collision_rectangle(bbox_left,bbox_top-5,bbox_right,bbox_top+4,obj_playerparent,0,1);
    
    //If the player does exist
    if (player)
    &amp;&amp; (player.state &lt; 2) {
    
        //Play 'Thwomp' sound
        audio_play_sound(snd_thwomp, 0, false);
        
        //Destroy solid mask
        with (mysolid) instance_destroy();
        
        //Perform level control event
        with (obj_levelcontrol) {
        
            event_user(0);
            alarm[2] = 0;
        }
        
        //Perform player events
        with (player) {
        
            //If the dropdown attack is there, destroy
            if (instance_exists(obj_dropdown)) {
            
                with (obj_dropdown) instance_destroy();
            }
        
            //Disable controls
            disablecontrol = true;
            
            //Set the vertical speed
            yspeed = -3;
        }
        
        //Do not animate
        image_speed = 0;
        image_index = 1;
        
        //Perform switch events
        event_user(0);
    }
}

//Otherwise, if the switch is pressed and no fanfare is playing
else if (ready) 
&amp;&amp; (audio_is_playing(bgm_smwclear))
    alarm[0] = 120;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Press the switch

//Play 'Course Clear' music
audio_play_sound(bgm_smwclear, 0, false);

//Display message
instance_create(0,0,obj_palacemsg);

//Clear the level
global.clear = 1;

//The switch is pressed
ready = 1;

//Check the sprite of the switch
switch (sprite_index) {

    //Yellow
    case (spr_palaceswitch_y): global.palaceyellow = true; break;
    
    //Green
    case (spr_palaceswitch_g): global.palacegreen = true; break;
    
    //Red
    case (spr_palaceswitch_r): global.palacered = true; break;
    
    //Blue
    case (spr_palaceswitch_b): global.palaceblue = true; break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
