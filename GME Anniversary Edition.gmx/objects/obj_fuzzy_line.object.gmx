<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fuzzy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fuzzy (Line)

//How vulnerable is this enemy to various items?
vulnerable = 1;

//How vulnerable is this enemy to the player?
stomp = 2;

//How vulnerable is this enemy to yoshi?
edible = 0;

//Facing direction
xscale = 1;

//Direction
direct = 0;

//Whether the object is swimming
swimming = false;

//Animate
image_speed = 0.125;

//Start moving
alarm[10] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move towards the player

if (!instance_exists(obj_playerparent))
|| (obj_playerparent.x &lt; x)
    direct = 180;
else
    direct = 90;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Makes the fuzzy move around on paths.

//Check up in what direction is the fuzzy moving.
switch (direct) {

    //If the fuzzy is moving to the right.
    case (0): {
    
        if (collision_point(x+1,y+sprite_height/2,obj_pathparent,1,0))
            x++;
        else if (collision_point(x+1,y+(sprite_height/2)-1,obj_pathparent,1,0)) {
        
            x++;
            y--;
        }
        else if (collision_point(x+1,y+(sprite_height/2)+1,obj_pathparent,1,0)) {
        
            x++;
            y++;
        }
        else if (collision_point(x,y+(sprite_height/2)-1,obj_pathparent,1,0)) {
        
            y--;
            direct = 90;
        }
        else if (collision_point(x,y+(sprite_height/2)+1,obj_pathparent,1,0)) {
        
            y++;
            direct = 270;
        }
        else            
            direct = 180;
    } break;
    
    //Otherwise, if the fuzzy is moving upwards.
    case (90): {
    
        if (collision_point(x,y+(sprite_height/2)-1,obj_pathparent,1,0))     
            y--;
        else if (collision_point(x-1,y+(sprite_height/2)-1,obj_pathparent,1,0)) {
        
            x--;
            y--;
        }
        else if (collision_point(x+1,y+(sprite_height/2)-1,obj_pathparent,1,0)) {
        
            x++;
            y--;
        }
        else if (collision_point(x-1,y+sprite_height/2,obj_pathparent,1,0)) {
        
            x--;
            direct = 180;
        }
        else if (collision_point(x+1,y+sprite_height/2,obj_pathparent,1,0)) {
        
            x++;
            direct = 0;
        }
        else     
            direct = 270;
    } break;
    
    //Otherwise, if the fuzzy is moving to the left.
    case (180): {
    
        if (collision_point(x-1,y+sprite_height/2,obj_pathparent,1,0))         
            x--;
        else if (collision_point(x-1,y+(sprite_height/2)-1,obj_pathparent,1,0)) {
        
            x--;
            y--;
        }
        else if (collision_point(x-1,y+(sprite_height/2)+1,obj_pathparent,1,0)) {
        
            x--;
            y++;
        }
        else if (collision_point(x,y+(sprite_height/2)-1,obj_pathparent,1,0)) {
        
            y--;
            direct = 90;
        }
        else if (collision_point(x,y+(sprite_height/2)+1,obj_pathparent,1,0)) {
        
            y++;
            direct = 270;
        }
        else            
            direct = 0;
    } break;
    
    //Otherwise, if the fuzzy is moving downwards.
    case (270): {
    
        if (collision_point(x,y+(sprite_height/2)+1,obj_pathparent,1,0))    
            y++;
        else if (collision_point(x-1,y+(sprite_height/2)+1,obj_pathparent,1,0)) {
        
            x--;
            y++;
        }
        else if (collision_point(x+1,y+(sprite_height/2)+1,obj_pathparent,1,0)) {
        
            x++;
            y++;
        }
        else if (collision_point(x-1,y+sprite_height/2,obj_pathparent,1,0)) {
        
            x--;
            direct = 180;
        }
        else if (collision_point(x+1,y+sprite_height/2,obj_pathparent,1,0)) {
        
            x++;
            direct = 0;
        }
        else            
            direct = 90;
    } break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
