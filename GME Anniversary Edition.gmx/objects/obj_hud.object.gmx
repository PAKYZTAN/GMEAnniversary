<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_marker_event</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///The In-Level HUD

//SMB3 Card Holders
if (instance_exists(obj_goalcard))
    alpha = 2;
else
    alpha = 0;

//P-Meter flash
flash = 0;
alarm[0] = 7;

//Shake
shakex = 0;
shakey = 0;

//Fade
fade = 0;
fadetype = 1;

//Shake the counter
alarm[1] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shake 'Time Left' marker

alarm[1] = 2;
if (audio_is_playing(snd_hurry)) {

    shakex = random_range(-1,1);
    shakey = random_range(-1,1);
}
else {

    shakex = 0;
    shakey = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change the frame for the P-Meter

flash = !flash;
alarm[0] = 7;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HUD Logic

//Fade timer to red if less than 100 seconds
if (global.time &gt; -1)
&amp;&amp; (obj_levelcontrol.leveltime != 0) {

    //If there's less than 100 seconds left
    if (global.time &lt;= 100) {
    
        //Fade out
        if (fadetype == -1) {
        
            fade -= 0.05;
            if (fade &lt; 0.05) {
            
                fade = 0;
                fadetype = 1;
            }
        }
        
        //Otherwise, fade in
        else {
        
            fade += 0.05;
            if (fade &gt; 1) {
            
                fade = 1;
                fadetype = -1;
            }            
        }        
    }
}

//If the goal card exists, show HUD cards
if (instance_exists(obj_goalcard)) {

    if (obj_levelcontrol.x &gt; obj_goalcard.x-384) 
    || (obj_levelcontrol.x &gt; obj_goalcard.x)
        alpha = 2;
    else
        alpha -= 0.025;
}

//Otherwise, hide HUD cards
else
    alpha = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the HUD

//Disable the fog
if (instance_exists(obj_lightningsheet)) then d3d_set_fog(0, c_black, 0, 64);

//Set font
draw_set_font(global.numbers_w);

//Lives
draw_sprite_ext(spr_hud_mario, -1, view_xview[0]+8, view_yview[0]+8, 1, 1, 0, c_white, 1);
draw_text_colour(view_xview[0]+34, view_yview[0]+12, string_format(lives, 2, 0), c_white, c_white, c_white, c_white, 1);

//Set font
draw_set_font(global.numbers_g);

//Coins
draw_sprite_ext(spr_hud_coin, -1, view_xview[0]+8, view_yview[0]+27, 1, 1, 0, c_white, 1);
draw_text_colour(view_xview[0]+19, view_yview[0]+31, string_format(global.coins, 2, 0), c_white, c_white, c_white, c_white, 1);

//Star coins
if (global.level != -1) {

    draw_sprite_ext(spr_hud_starcoin, -1, view_xview[0]+8, view_yview[0]+46, 1, 1, 0, c_white, 1);
    for (var i = 0; i &lt; 3; i++) {
    
        //Draw the coin if it has been collected
        if (ds_map_find_value(global.sc[i],global.level) &gt; 0)
            draw_sprite_ext(spr_hud_starcoin_get, -1, view_xview[0]+8+(17*i), view_yview[0]+46, 1, 1, 0, c_white, 1);
    }
}

//Cards
draw_sprite_ext(spr_hud_cards, 0, view_xview[0]+view_wview[0]-70,view_yview[0]+view_hview[0]-26, 1, 1, 0, c_white, alpha);
for (var i = 0; i &lt; 3; i++) {

    if (global.card[i] != -1)
        draw_sprite_ext(spr_goalcard, global.card[i], view_xview[0]+view_wview[0]-(69-(22*i)), view_yview[0]+view_hview[0]-25, 1, 1, 0, c_white, alpha);
}

//Reserve Box / Health Meter
if (global.healthmode == 0) {

    //Box
    draw_sprite_ext(spr_hud_reserve, 0, view_xview[0]+view_wview[0]/2, view_yview[0]+12, 1, 1, 0, c_white, 1);
    
    //Reserve item
    if (global.reserve &gt; cs_small)
        draw_sprite_ext(constant_get_sprite(global.reserve), 0, view_xview[0]+view_wview[0]/2, view_yview[0]+12, 1, 1, 0, c_white, 1);
}
else
draw_sprite_ext(spr_hud_health, health, view_xview[0]+view_wview[0]/2, view_yview[0]+23, 1, 1, 0, c_white, 1);

//Set font
draw_set_font(global.numbers_w);

//Time
draw_sprite_ext(spr_hud_time, -1, view_xview[0]+view_wview[0]-56+shakex, view_yview[0]+12+shakey, 1, 1, 0, c_white, 1);
if (global.time &gt; -1)
&amp;&amp; (obj_levelcontrol.leveltime != 0) {

    //If there's 100 or less seconds left and the level isn't finished
    if (global.clear == 0) 
    &amp;&amp; (global.time &lt;= 100) {
    
        draw_text_colour(view_xview[0]+view_wview[0]-41+shakex, view_yview[0]+12+shakey, string_add_zeros(global.time, 3), c_white, c_white, c_white, c_white, 1);
        draw_text_colour(view_xview[0]+view_wview[0]-41+shakex, view_yview[0]+12+shakey, string_add_zeros(global.time, 3), c_red, c_red, c_red, c_red, fade);
    }
    else
        draw_text_colour(view_xview[0]+view_wview[0]-41, view_yview[0]+12, string_add_zeros(global.time, 3), c_white, c_white, c_white, c_white, 1);
}
else
draw_text_colour(view_xview[0]+view_wview[0]-41, view_yview[0]+12, "000", c_white, c_white, c_white, c_white, 1);

//Set font
draw_set_font(global.numbers_b);

//Score
draw_text_colour(view_xview[0]+view_wview[0]-152, view_yview[0]+12, string_add_zeros(score, 8), c_white, c_white, c_white, c_white, 1);

//Set font
draw_set_font(global.numbers_w);

//P-Meter
if (instance_exists(obj_playerparent)) {

    if (obj_playerparent.pmeter &gt; 111)
    || (global.pwing == 1)
        draw_sprite_ext(spr_hud_pmeter, 7+flash, view_xview[0]+8, view_yview[0]+view_hview[0]-18, 1, 1, 0, c_white, 1);
    else
        draw_sprite_ext(spr_hud_pmeter, 0+(obj_playerparent.pmeter/14), view_xview[0]+8, view_yview[0]+view_hview[0]-18, 1, 1, 0, c_white, 1);
}
else
    draw_sprite_ext(spr_hud_pmeter, 0, view_xview[0]+8, view_yview[0]+view_hview[0]-18, 1, 1, 0, c_white, 1);
    
//Enable the fog
if (instance_exists(obj_lightningsheet)) then d3d_set_fog(1, c_black, 0, 64);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
