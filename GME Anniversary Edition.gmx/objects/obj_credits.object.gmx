<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_marker_event</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1000000</depth>
  <persistent>0</persistent>
  <parentName>obj_title</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Staff Roll

//Play 'Credits' theme
audio_play_sound(bgm_credits, 0, true);

//Set alpha
alpha = 0;

//Background bars position
barx = 0;

//Display "The End"
ready = 0;

//Display "Press Any Key!"
ready2 = 0;

//Current text
numb = 0;
for (i=0; i&lt;87; i++) {

    text[i] = "";
    tcol[i] = c_white;
}

//Generate text
alarm[0] = 16;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Display / Not display "Press Any Key!"

ready2 = !ready2;
alarm[1] = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Generate text

//Create text
with (instance_create(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0], obj_credits_text)) {

    //Set the text
    mytext = other.text[other.numb];
    
    //Set the colour
    colour = other.tcol[other.numb];
}

//Increment numb
numb++;

//Repeat the process if there's still text
if (numb != array_length_1d(text))
    alarm[0] = 32;
else
    exit;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update background

//If there's no more text to display, allow exit
if (numb == array_length_1d(text)) {

    //If there's not more text in screen
    if (instance_number(obj_credits_text) == 0)
    &amp;&amp; (ready == 0)
        ready = 1;

    //If 'The End' is still appearing
    else if (ready == 1) {
            
        alpha += 0.025;
        if (alpha &gt; 1) {
        
            //Play 'Open path' sound
            audio_play_sound(snd_openpath, 0, false);
            
            //Set alpha
            alpha = 1;
            
            //Allow exit
            ready = 2;
            alarm[1] = 30;
        }
    }
    
    //Otherwise, allow exit
    else if (ready == 2) {
    
        //If any key is pressed
        if (keyboard_check_pressed(vk_anykey)) {
        
            //Stop 'Credits' theme
            audio_stop_sound(bgm_credits);
        
            //Create curtain out effect
            if (instance_number(obj_curtainout) == 0) {
            
                with (instance_create(view_xview[0] + view_wview[0]/2, view_yview[0] + view_hview[0]/2,obj_curtainout)) 
                    target = rm_disclaimer;
            }            
        }
    }
}

//Update bars position
barx += 0.5;

//Update background speed
background_hspeed[0] = 0.25;
background_vspeed[0] = 0.25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create opening curtain

instance_create(0, 0, obj_curtainin);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw background

//Draw title middle
draw_sprite_tiled_area_ext(spr_titlebg_middle, 0, 0, 0, view_xview[0], view_yview[0]+5, view_wview[0], view_yview[0]+190, c_white, 1);

//Draw title top bar
draw_sprite_tiled_area_ext(spr_titlebg_top, 0, 0+barx, 0, view_xview[0], view_yview[0], view_wview[0], view_yview[0]+31, c_white, 1);

//Draw title bottom bar
draw_sprite_tiled_area_ext(spr_titlebg_bottom, 0, 0+barx*-1, 184, view_xview[0], view_hview[0]-32, view_wview[0], view_hview[0], c_white, 1);

//Display 'The End'
if (ready &gt; 0) {

    draw_sprite_ext(spr_theend, 0, view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0]/2, 1, 1, 0, c_white, alpha);
    if (ready2 == 1) {
    
        //Set font
        draw_set_font(global.font_interface);
        
        //Draw the text
        draw_text(view_xview[0]+8, view_yview[0] + view_hview[0] - 16, string("PRESS ANY KEY!"));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
