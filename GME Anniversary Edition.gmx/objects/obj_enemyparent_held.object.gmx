<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_galoomba_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_parhold</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///The parent object for all holdable SMB3 / SMW enemies

//Inherit event
event_inherited();

//How vulnerable is this enemy to various items?
//0: Normal
//1: Immune to fireballs
//2: Immune to all projectiles
//99: Invincible
//100: Invincible + Ignore projectiles
vulnerable = 0;

//Combo
hitcombo = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn into a silver coin if the silver switch is active

if (obj_levelcontrol.gswitchon == true) {

    instance_create(x,y,obj_enemy_coin);
    instance_destroy();
    exit;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_powkiller">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with pow blocks

//If the pow block kill effect is the goal one, make enemies go poof
if (other.killtype == 1) {
    
    //Create smoke effect
    instance_create(round(bbox_left+bbox_right)/2-8,round(bbox_top+bbox_bottom)/2-8,obj_enemy_score);
    instance_create(round(bbox_left+bbox_right)/2-8,round(bbox_top+bbox_bottom)/2-8,obj_smoke);    
    instance_destroy();
    exit;
}

//Otherwise, do default
else {
    
    //If the enemy is vulnerable to explosions
    if (vulnerable &lt; 99) {
    
        //Kill the enemy
        if (other.object_index == obj_stomp) {
        
            //Do not perform if the object is moving
            if (vspeed != 0)
            exit;
                event_user(7);
        }
        else
            event_user(0);
        
        //Get points based on combo
        if (other.hitcombo == 0) { //200 points
        
            audio_play_sound(snd_kick2, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(2);
        }
        else if (other.hitcombo == 1) { //400 points
        
            audio_play_sound(snd_kick3, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(3);
        }
        else if (other.hitcombo == 2) { //800 points
        
            audio_play_sound(snd_kick4, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(4);
        }
        else if (other.hitcombo == 3) { //1000 points
        
            audio_play_sound(snd_kick5, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(5);
        }
        else if (other.hitcombo == 4) { //2000 points
        
            audio_play_sound(snd_kick6, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(6);
        }
        else if (other.hitcombo == 5) { //4000 points
        
            audio_play_sound(snd_kick7, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(7);
        }
        else if (other.hitcombo == 6) { //8000 points
        
            audio_play_sound(snd_kick8, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(8);
        }
        else if (other.hitcombo &gt; 6) { //1-UP
    
            audio_play_sound(snd_kick8, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(9);
        }
        
        //Create 'Spinthump' effect
        with (instance_create(round(bbox_left+bbox_right)/2,round(bbox_top+bbox_bottom)/2-8,obj_smoke)) sprite_index = spr_spinthump;
        
        //Increment hitcombo
        other.hitcombo++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_explosion">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with explosion

//If the enemy is vulnerable to explosions
if (vulnerable &lt; 99) {

    //Kill the enemy
    event_user(0);
    
    //Get points based on combo
    if (other.hitcombo == 0) { //200 points
    
        audio_play_sound(snd_kick2, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(2);
    }
    else if (other.hitcombo == 1) { //400 points
    
        audio_play_sound(snd_kick3, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(3);
    }
    else if (other.hitcombo == 2) { //800 points
    
        audio_play_sound(snd_kick4, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(4);
    }
    else if (other.hitcombo == 3) { //1000 points
    
        audio_play_sound(snd_kick5, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(5);
    }
    else if (other.hitcombo == 4) { //2000 points
    
        audio_play_sound(snd_kick6, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(6);
    }
    else if (other.hitcombo == 5) { //4000 points
    
        audio_play_sound(snd_kick7, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(7);
    }
    else if (other.hitcombo == 6) { //8000 points
    
        audio_play_sound(snd_kick8, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(8);
    }
    else if (other.hitcombo &gt; 6) { //1-UP

        audio_play_sound(snd_kick8, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(9);
    }
    
    //Create 'Spinthump' effect
    with (instance_create(round(bbox_left+bbox_right)/2,round(bbox_top+bbox_bottom)/2-8,obj_smoke)) sprite_index = spr_spinthump;
    
    //Increment hitcombo
    other.hitcombo++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_turnip_shell">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with thrown vegetables
    
//If the vegetable is not held and it's moving down, kill.
if (other.held == 0) {

    //If the enemy is vulnerable to vegetables
    if (vulnerable &lt; 99) {
    
        //Kill the enemy
        event_user(0);
        
        //Get points based on combo
        if (other.hitcombo == 0) { //200 points
        
            audio_play_sound(snd_kick2, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(2);
        }
        else if (other.hitcombo == 1) { //400 points
        
            audio_play_sound(snd_kick3, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(3);
        }
        else if (other.hitcombo == 2) { //800 points
        
            audio_play_sound(snd_kick4, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(4);
        }
        else if (other.hitcombo == 3) { //1000 points
        
            audio_play_sound(snd_kick5, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(5);
        }
        else if (other.hitcombo == 4) { //2000 points
        
            audio_play_sound(snd_kick6, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(6);
        }
        else if (other.hitcombo == 5) { //4000 points
        
            audio_play_sound(snd_kick7, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(7);
        }
        else if (other.hitcombo == 6) { //8000 points
        
            audio_play_sound(snd_kick8, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(8);
        }
        else if (other.hitcombo &gt; 6) { //1-UP
    
            audio_play_sound(snd_kick8, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(9);
        }
        
        //Create 'Spinthump' effect
        with (instance_create(round(bbox_left+bbox_right)/2,round(bbox_top+bbox_bottom)/2-8,obj_smoke)) sprite_index = spr_spinthump;
        
        //Increment hitcombo
        other.hitcombo++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_barrel_up">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with thrown barrels
    
//If the vegetable is not held and it's moving down, kill.
if (other.held == 0) {

    //If the enemy is vulnerable to vegetables
    if (vulnerable &lt; 99) {
    
        //Kill the enemy
        event_user(0);
        
        //Destroy if explosive
        if (other.sprite_index == spr_barrel_tnt_roll) {
        
            with (other) event_user(0);
        }
                
        //Get points based on combo
        if (other.hitcombo == 0) { //200 points
        
            audio_play_sound(snd_kick2, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(2);
        }
        else if (other.hitcombo == 1) { //400 points
        
            audio_play_sound(snd_kick3, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(3);
        }
        else if (other.hitcombo == 2) { //800 points
        
            audio_play_sound(snd_kick4, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(4);
        }
        else if (other.hitcombo == 3) { //1000 points
        
            audio_play_sound(snd_kick5, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(5);
        }
        else if (other.hitcombo == 4) { //2000 points
        
            audio_play_sound(snd_kick6, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(6);
        }
        else if (other.hitcombo == 5) { //4000 points
        
            audio_play_sound(snd_kick7, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(7);
        }
        else if (other.hitcombo == 6) { //8000 points
        
            audio_play_sound(snd_kick8, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(8);
        }
        else if (other.hitcombo &gt; 6) { //1-UP
    
            audio_play_sound(snd_kick8, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(9);
        }
        
        //Create 'Spinthump' effect
        with (instance_create(round(bbox_left+bbox_right)/2,round(bbox_top+bbox_bottom)/2-8,obj_smoke)) sprite_index = spr_spinthump;
        
        //Increment hitcombo
        other.hitcombo++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_invincibility">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with invincibility

//If the enemy is vulnerable to invincibility
if (vulnerable &lt; 99) {

    //Kill the enemy
    event_user(0);
    
    //Get points based on combo
    if (other.hitcombo == 0) { //200 points
    
        audio_play_sound(snd_kick2, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(2);
    }
    else if (other.hitcombo == 1) { //400 points
    
        audio_play_sound(snd_kick3, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(3);
    }
    else if (other.hitcombo == 2) { //800 points
    
        audio_play_sound(snd_kick4, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(4);
    }
    else if (other.hitcombo == 3) { //1000 points
    
        audio_play_sound(snd_kick5, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(5);
    }
    else if (other.hitcombo == 4) { //2000 points
    
        audio_play_sound(snd_kick6, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(6);
    }
    else if (other.hitcombo == 5) { //4000 points
    
        audio_play_sound(snd_kick7, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(7);
    }
    else if (other.hitcombo == 6) { //8000 points
    
        audio_play_sound(snd_kick8, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(8);
    }
    else if (other.hitcombo &gt; 6) { //1-UP

        audio_play_sound(snd_kick8, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(9);
    }
    
    //Create 'Spinthump' effect
    with (instance_create(round(bbox_left+bbox_right)/2,round(bbox_top+bbox_bottom)/2-8,obj_smoke)) sprite_index = spr_spinthump;
    
    //Increment hitcombo
    other.hitcombo++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_football">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with football

//If the football is held
if (other.held == 1) 
&amp;&amp; (vulnerable &lt; 99) {

    //Play 'Kick' sound
    audio_play_sound(snd_kick, 0, false);

    //Kill enemy
    event_user(0);    
    
    //Get 1000 points
    with (instance_create(x-8,y,obj_score)) event_user(5);
    
    //Create 'Spinthump' effect
    with (instance_create(round(bbox_left+bbox_right)/2,round(bbox_top+bbox_bottom)/2-8,obj_smoke)) sprite_index = spr_spinthump;
    
    //Destroy brick
    with (other) event_user(0);
}

//Otherwise
else {
    
    //If the enemy is vulnerable to fireballs
    if (vulnerable &lt; 99) {
    
        //Play 'Kick' sound
        audio_play_sound(snd_kick, 0, false);        
        
        //Kill the enemy
        event_user(0);
        
        //Destroy projectile
        with (other) event_user(0);
                
        //Get 200 points
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(2);
    }
    
    //Destroy fireball
    if (vulnerable &lt; 100)
        with (other) event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_boomerang">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with boomerang

if (vulnerable &lt; 99) {
    
    //Kill the enemy
    event_user(0);
    
    //Play 'Kick' sound
    audio_play_sound(snd_kick, 0, false);
    
    //Create 'Spinthump' effect
    with (instance_create(round(bbox_left+bbox_right)/2,round(bbox_top+bbox_bottom)/2-8,obj_smoke)) sprite_index = spr_spinthump;
    
    //Get 200 points
    with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
        event_user(2);
}

//Destroy boomerang
else if (vulnerable &lt; 100) {

    with (other) {
    
        instance_create(x-8,y,obj_smoke);
        instance_destroy();
        exit;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_hammer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with hammers

if (vulnerable &lt; 99) {
    
    //Kill the enemy
    event_user(0);
    
    //Play 'Kick' sound
    audio_play_sound(snd_kick, 0, false);
    
    //Create 'Spinthump' effect
    with (instance_create(round(bbox_left+bbox_right)/2,round(bbox_top+bbox_bottom)/2-8,obj_smoke)) sprite_index = spr_spinthump;
    
    //Get 200 points
    with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
        event_user(2);
}

//Destroy hammer
else if (vulnerable &lt; 100) {

    with (other) {
    
        instance_create(x-8,y-8,obj_smoke);
        instance_destroy();
        exit;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_iceball">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with ice balls

//If the player is vulnerable to ice balls
if (vulnerable &lt; 2) {
    
    //Play 'Transform' sound
    audio_play_sound(snd_freeze, 0, false);
    
    //Turn into a ice cube
    imiced = instance_create(x,y,obj_iceblock);
    
    //Set parameters
    with (imiced) {
        
        //Set the sprite
        sprite_index = other.sprite_index;
        
        //Change size
        event_user(14);
    }
    
    //Destroy
    instance_destroy();
}

//Destroy the projectile
if (vulnerable &lt; 100)
    with (other) event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_shell_kick">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with a thrown shell

//If the enemy is vulnerable to shells
if (vulnerable &lt; 99) {

    //Kill the enemy
    event_user(0);
    
    //Do not get points if the other object is moving
    if (gravity == 0) {
        
        //Get points based on combo
        if (other.hitcombo == 0) { //200 points
        
            audio_play_sound(snd_kick2, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(2);
        }
        else if (other.hitcombo == 1) { //400 points
        
            audio_play_sound(snd_kick3, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(3);
        }
        else if (other.hitcombo == 2) { //800 points
        
            audio_play_sound(snd_kick4, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(4);
        }
        else if (other.hitcombo == 3) { //1000 points
        
            audio_play_sound(snd_kick5, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(5);
        }
        else if (other.hitcombo == 4) { //2000 points
        
            audio_play_sound(snd_kick6, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(6);
        }
        else if (other.hitcombo == 5) { //4000 points
        
            audio_play_sound(snd_kick7, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(7);
        }
        else if (other.hitcombo == 6) { //8000 points
        
            audio_play_sound(snd_kick8, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(8);
        }
        else if (other.hitcombo &gt; 6) { //1-UP
    
            audio_play_sound(snd_kick8, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(9);
        }
    }
    
    //Create 'Spinthump' effect
    with (instance_create(round(bbox_left+bbox_right)/2,round(bbox_top+bbox_bottom)/2-8,obj_smoke)) sprite_index = spr_spinthump;
    
    //Increment hitcombo
    other.hitcombo++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_koopa_kamikaze">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with a kamikaze koopa

if (vulnerable &lt; 99) {

    //Kill the enemy
    event_user(0);
    
    //Get points based on combo
    if (other.hitcombo == 0) { //200 points
    
        audio_play_sound(snd_kick2, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(2);
    }
    else if (other.hitcombo == 1) { //400 points
    
        audio_play_sound(snd_kick3, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(3);
    }
    else if (other.hitcombo == 2) { //800 points
    
        audio_play_sound(snd_kick4, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(4);
    }
    else if (other.hitcombo == 3) { //1000 points
    
        audio_play_sound(snd_kick5, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(5);
    }
    else if (other.hitcombo == 4) { //2000 points
    
        audio_play_sound(snd_kick6, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(6);
    }
    else if (other.hitcombo == 5) { //4000 points
    
        audio_play_sound(snd_kick7, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(7);
    }
    else if (other.hitcombo == 6) { //8000 points
    
        audio_play_sound(snd_kick8, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(8);
    }
    else if (other.hitcombo &gt; 6) { //1-UP

        audio_play_sound(snd_kick8, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(9);
    }
    
    //Create 'Spinthump' effect
    with (instance_create(round(bbox_left+bbox_right)/2,round(bbox_top+bbox_bottom)/2-8,obj_smoke)) sprite_index = spr_spinthump;
    
    //Increment hitcombo
    other.hitcombo++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bluebrick_th">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with held/thrown bricks

//If the enemy is vulnerable
if (vulnerable &lt; 99) {

    //If the brick is held
    if (other.held == 1) {
    
        //Play 'Kick' sound
        audio_play_sound(snd_kick, 0, false);
    
        //Kill enemy
        event_user(0);    
        
        //Get 1000 points
        with (instance_create(x-8,y,obj_score)) event_user(5);
        
        //Create 'Spinthump' effect
        with (instance_create(round(bbox_left+bbox_right)/2,round(bbox_top+bbox_bottom)/2-8,obj_smoke)) sprite_index = spr_spinthump;
        
        //Destroy brick
        with (other) event_user(0);
    }
    
    //Otherwise
    else if ((other.held == 0) &amp;&amp; (other.ready == 1)) {
        
        //Kill the enemy
        event_user(0);
        
        //Get points based on combo
        if (other.hitcombo == 0) { //200 points
        
            audio_play_sound(snd_kick2, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(2);
        }
        else if (other.hitcombo == 1) { //400 points
        
            audio_play_sound(snd_kick3, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(3);
        }
        else if (other.hitcombo == 2) { //800 points
        
            audio_play_sound(snd_kick4, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(4);
        }
        else if (other.hitcombo == 3) { //1000 points
        
            audio_play_sound(snd_kick5, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(5);
        }
        else if (other.hitcombo == 4) { //2000 points
        
            audio_play_sound(snd_kick6, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(6);
        }
        else if (other.hitcombo == 5) { //4000 points
        
            audio_play_sound(snd_kick7, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(7);
        }
        else if (other.hitcombo == 6) { //8000 points
        
            audio_play_sound(snd_kick8, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(8);
        }
        else if (other.hitcombo &gt; 6) { //1-UP
    
            audio_play_sound(snd_kick8, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(9);
        }
        
        //Create 'Spinthump' effect
        with (instance_create(round(bbox_left+bbox_right)/2,round(bbox_top+bbox_bottom)/2-8,obj_smoke)) sprite_index = spr_spinthump;
        
        //Increment hitcombo
        other.hitcombo++;
        
        //Destroy brick if red
        if (other.sprite_index == spr_redbrick_th)
            with (other) event_user(0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_dropdown">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with a dropdown attack

//If the enemy is vulnerable to invincibility
if (vulnerable &lt; 99) 
&amp;&amp; (other.vspeed &gt; 0) {

    //Kill the enemy
    event_user(0);
    
    //Get points based on combo
    if (other.hitcombo == 0) { //200 points
    
        audio_play_sound(snd_kick2, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(2);
    }
    else if (other.hitcombo == 1) { //400 points
    
        audio_play_sound(snd_kick3, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(3);
    }
    else if (other.hitcombo == 2) { //800 points
    
        audio_play_sound(snd_kick4, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(4);
    }
    else if (other.hitcombo == 3) { //1000 points
    
        audio_play_sound(snd_kick5, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(5);
    }
    else if (other.hitcombo == 4) { //2000 points
    
        audio_play_sound(snd_kick6, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(6);
    }
    else if (other.hitcombo == 5) { //4000 points
    
        audio_play_sound(snd_kick7, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(7);
    }
    else if (other.hitcombo == 6) { //8000 points
    
        audio_play_sound(snd_kick8, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(8);
    }
    else if (other.hitcombo &gt; 6) { //1-UP

        audio_play_sound(snd_kick8, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(9);
    }
    
    //Create 'Spinthump' effect
    with (instance_create(round(bbox_left+bbox_right)/2,round(bbox_top+bbox_bottom)/2-8,obj_smoke)) sprite_index = spr_spinthump;
    
    //Increment hitcombo
    other.hitcombo++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_spinner">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with the raccoon tail

//If the enemy is vulnerable to invincibility and it's not moving up
if (vulnerable &lt; 99) 
&amp;&amp; (vspeed &gt;= 0) 
&amp;&amp; (inwall == 0) {

    //Play 'Kick sound
    audio_play_sound(snd_kick, 0, false);

    //Kill or flip the enemy
    event_user(7);
    
    //Create 'Spinthump' effect
    with (instance_create(round(bbox_left+bbox_right)/2,round(bbox_top+bbox_bottom)/2-8,obj_smoke)) sprite_index = spr_spinthump;
        
    //Get 200 points
    with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score)) 
        event_user(2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_blockparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with bumped blocks

if (other.vspeed &lt; 0)
&amp;&amp; (bbox_bottom &lt; other.yprevious+5) {

    //Play 'Kick sound
    audio_play_sound(snd_kick, 0, false);

    //Kill or flip the enemy
    event_user(7);
    
    //Create 'Spinthump' effect
    with (instance_create(round(bbox_left+bbox_right)/2,round(bbox_top+bbox_bottom)/2-8,obj_smoke)) sprite_index = spr_spinthump;
        
    //Get 200 points
    with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score)) 
        event_user(2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_projectileparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with projectiles

//If the enemy is vulnerable to fireballs
if (vulnerable == 0) {

    //If the object is a fireball and enemies can be turn into coins
    if ((other.object_index == obj_fireball) &amp;&amp; (global.enemy_to_coin == 1)) {
    
        //Play 'Kick' sound
        audio_play_sound(snd_kick, 0, false);
        
        //Turn into a coin
        with (instance_create(x, y, obj_blockcoin2)) {
        
            //Jump a bit
            vspeed = -4;
            y--;
            
            //Move in the opposite way the player is
            if (!instance_exists(obj_playerparent))
            || (obj_playerparent.x &lt; x)
                hspeed = 0.5;
            else
                hspeed = -0.5;                    
        }
        
        //Destroy
        instance_destroy();
        
        //Create smoke effect
        instance_create(round(bbox_left+bbox_right)/2-8,round(bbox_top+bbox_bottom)/2-8,obj_smoke);
        
        //Destroy projectile
        with (other) event_user(0);
    }
    
    else {

        //Play 'Kick' sound
        audio_play_sound(snd_kick, 0, false);        
        
        //Kill the enemy
        event_user(0);
        
        //Destroy projectile
        with (other) event_user(0);
                
        //Get 200 points
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(2);
    }
}

//Destroy fireball
if (vulnerable &lt; 100)
    with (other) event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemyparent_held">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with held/thrown bricks

//If the enemy is vulnerable
if (vulnerable &lt; 99) {

    //If the brick is held
    if (other.held == 1) 
    || (other.vspeed != 0) {
    
        //Play 'Kick' sound
        audio_play_sound(snd_kick, 0, false);
    
        //Kill enemy
        event_user(0);    
        
        //Get 1000 points
        with (instance_create(x-8,y,obj_score)) event_user(5);
        
        //Create 'Spinthump' effect
        with (instance_create(round(bbox_left+bbox_right)/2,round(bbox_top+bbox_bottom)/2-8,obj_smoke)) sprite_index = spr_spinthump;
        
        //Destroy held enemy
        with (other) event_user(0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_parcarry">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with thrown vegetables
    
//If the vegetable is not held and it's moving down, kill.
if (other.held == 0)
&amp;&amp; (other.vspeed &gt; 0) {

    //If the enemy is vulnerable to vegetables
    if (vulnerable &lt; 99) {
    
        //Kill the enemy
        event_user(0);
        
        //Get points based on combo
        if (other.hitcombo == 0) { //200 points
        
            audio_play_sound(snd_kick2, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(2);
        }
        else if (other.hitcombo == 1) { //400 points
        
            audio_play_sound(snd_kick3, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(3);
        }
        else if (other.hitcombo == 2) { //800 points
        
            audio_play_sound(snd_kick4, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(4);
        }
        else if (other.hitcombo == 3) { //1000 points
        
            audio_play_sound(snd_kick5, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(5);
        }
        else if (other.hitcombo == 4) { //2000 points
        
            audio_play_sound(snd_kick6, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(6);
        }
        else if (other.hitcombo == 5) { //4000 points
        
            audio_play_sound(snd_kick7, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(7);
        }
        else if (other.hitcombo == 6) { //8000 points
        
            audio_play_sound(snd_kick8, 0, false);
            with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                event_user(8);
        }
        else if (other.hitcombo &gt; 6) { //1-UP
        
            //If the combo is odd
            if (other.hitcombo % 2 == 1) {
        
                audio_play_sound(snd_kick8, 0, false);
                with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                    event_user(9);
            }
            
            //Otherwise, if the combo is even
            else if (other.hitcombo % 2 == 0) {
            
                audio_play_sound(snd_kick8, 0, false);
                with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                    event_user(10);        
            }
        }
        //Create 'Spinthump' effect
        with (instance_create(round(bbox_left+bbox_right)/2,round(bbox_top+bbox_bottom)/2-8,obj_smoke)) sprite_index = spr_spinthump;
        
        //Increment hitcombo
        other.hitcombo++;
    }
    
    //Bounce
    other.vspeed = -3;
    
    //Reduce horizontal speed
    other.hspeed = other.hspeed/1.5;
    
    //If the other object is a enemy, do not respawn
    if (other.object_index == obj_enemy_carried)
        with (other) turnback = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default flip script

//Mainly for enemies that can be held after stunning
//Defaults to dead script
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default throw / kick event.

//If 'Up' is pressed, throw it upwards.
if (keyboard_check(global.upkey)) {

    //Play 'Kick' sound.
    audio_play_sound(snd_kick, 0, false);
    
    //Create hit
    with (instance_create(x,y,obj_smoke)) sprite_index = spr_spinthump;
    
    //If the item is not overlapping a solid.
    if (!collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_solid,0,0)) {
        
        //Set the horizontal speed
        hspeed = obj_playerparent.xspeed/2;
        
        //If the item is not in a water surface
        if (!collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_top,obj_swim,0,0))
            vspeed = -7;
            
        //Otherwise
        else {

            vspeed = -3.5;
            swimming = true;
        }
    }
    else
        inwall = true;
}

//Otherwise, if 'Down' is pressed.
else if (keyboard_check(global.downkey)) {
    
    //Check if the object is stuck on a solid and move it
    if (collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_solid,0,0)) {
    
        //Move it to a safe position
        inwall = true;
        
        //Stop it
        hspeed = 0;
    }
    
    //If there's not a slope in place...
    if (!collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_slopeparent,1,0))
        hspeed = 0.5*obj_playerparent.xscale;
    
    //Otherwise
    else
        vspeed = 0.1;    
}

//Otherwise, throw it to the side.
else {
        
    //Play 'Kick' sound.
    audio_play_sound(snd_kick, 0, false);
    
    //Create hit
    with (instance_create(x,y,obj_smoke)) sprite_index = spr_spinthump;

    //If the item is not overlapping a solid.
    if (!collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_solid,0,0)) {
        
        //Set the vertical speed
        vspeed = -2;
        
        //If the object is not on contact with a slope
        if (!collision_rectangle(x,bbox_top,x,bbox_bottom-4,obj_slopeparent,1,0))
            hspeed = obj_playerparent.xspeed+2*obj_playerparent.xscale;
            
        //Otherwise, do not apply horizontal speed
        else        
            vspeed = 0.1;
    }
    
    //Otherwise, kill it
    else {
    
        //Create dead object
        with (instance_create(x,y,obj_enemy_dead)) {
        
            sprite_index = other.sprite_index;
            image_xscale = other.dir;
        }
    
        //Get 100 points
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score)) event_user(1);
        
        //Destroy
        instance_destroy();  
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default enemy dead script

//Create dead object
imdead = instance_create(x,y,obj_enemy_dead);

//Make the dead object hereby the sprite
imdead.sprite_index = sprite_index;

//Make the dead object hereby the scale
imdead.image_xscale = dir;

//Set the hspeed of the dead object
if (other.hspeed == 0) {

    //If the kill object is at the left of this object
    if (other.bbox_left+bbox_right/2 &lt; bbox_left+bbox_right/2)
        imdead.hspeed = 1;
    else if (other.bbox_left+bbox_right/2 &gt; bbox_left+bbox_right/2)
        imdead.hspeed = -1;
}
else {

    //If the kill object is the player, hereby player's hspeed
    if (other.object_index == obj_playerparent) {
    
        //If the player is sliding
        if (other.sliding)        
            imdead.hspeed = other.xspeed;
    }
        
    //Otherwise, set default speed
    else {
    
        if (other.hspeed &gt; 0)
            imdead.hspeed = 1;
        else if (other.hspeed &lt; 0)
            imdead.hspeed = -1;
    }
}

//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
