<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_blocktrain</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_solid</parentName>
  <maskName>spr_square</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Block train

/*
//  This item uses creation code.
//
//  length = Length of the train.
//  spd    = Speed of the train.
*/

//Default values
length = 4;
spd = 1;

//Do not animate
image_speed = 0;

//Make it move when room starts
alarm[0] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move when room starts

//Check if overlapping with a arrow modifier and make it move at the start of the room.
if (collision_point(x,y,obj_up,0,0)) {
        
    //Create train
    with (instance_create(x,y,obj_blocktrain_front)) {
    
        dir = 90;
        motion_set(90,other.spd);
        length = other.length;
    }
    
    //Destroy
    instance_destroy();
}
else if (collision_point(x,y,obj_down,0,0)) {
        
    //Create train
    with (instance_create(x,y,obj_blocktrain_front)) {
    
        dir = 270;
        motion_set(270,other.spd);
        length = other.length;
    }
    
    //Destroy
    instance_destroy();
}
else if (collision_point(x,y,obj_left,0,0)) {
        
    //Create train
    with (instance_create(x,y,obj_blocktrain_front)) {
    
        dir = 180;
        motion_set(180,other.spd);
        length = other.length;
    }
    
    //Destroy
    instance_destroy();
}
else if (collision_point(x,y,obj_right,0,0)) {
        
    //Create train
    with (instance_create(x,y,obj_blocktrain_front)) {
    
        dir = 0;
        motion_set(0,other.spd);
        length = other.length;
    }
    
    //Destroy
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create moving block train

//If the player is on this moving platform
if ((collision_rectangle(bbox_left,bbox_top-5,bbox_right,bbox_top+4,obj_playerparent,0,0))
&amp;&amp; (obj_playerparent.bbox_bottom &lt; yprevious+5)
&amp;&amp; (obj_playerparent.state &lt; 2)) {
        
    //Create train
    with (instance_create(xstart,ystart,obj_blocktrain_front)) {

        dir = 0;
        motion_set(0,other.spd);
        length = other.length-1;
    }
    
    //Destroy
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
