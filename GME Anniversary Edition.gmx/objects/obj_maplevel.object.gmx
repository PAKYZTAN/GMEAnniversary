<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_maplevel</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_square</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Map panel

/*
**  This item uses creation code!
**
**  levelname = Name of the level. (In quotes)
**  levelid = ID for the level, this is used to handle star coins.
**  exitdir = Regular exit direction
**  exitalt = Secret exit direction      
**      0: Up
**      1: Down
**      2: Left
**      3: Right
**      4: Up-Left
**      5: Up-Right
**      6: Down-Left
**      7: Down-Right
**      8: Up-Down
**      9: Left-Right
**
**  saveme = Whether to save the game after beating
**  myroom = Destination room
**  block = Number of Star Coins to unlock level. (Default: 0)
*/

//Default variables
levelname = "No name set!"
levelid = "1";
exitdir = -1;
exitalt = -1;
saveme = 0;
myroom = room_next(room);
block = 0;

//Animate
image_speed = 0.2;

//Whether the level has been beaten
beaten = 0;

//Whether a checkpoint was hit inside the level
checkpoint = noone;
alarm[0] = 1;

//Check map value
if (ds_map_find_value(global.mapscreen,id) &gt; 0) {

    visible = 1;
    if (ds_map_find_value(global.mapscreen,id) &gt; 1)
        beaten = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///UNUSED ON THIS OBJECT
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Remember checkpoint for this level

if (global.checkpoint != noone) 
&amp;&amp; (place_meeting(x+8,y+8,obj_mapplayer)) {
    
    //Remember checkpoint
    checkpoint = global.checkpoint;
    
    //Reset global checkpoint
    global.checkpoint = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_opener">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Open up the path

//If the level is not visible
if (!visible) {
    
    //Make visible...
    visible = 1;
    
    //...and remember it
    ds_map_replace(global.mapscreen, id, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_modifier">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Open up the path

//If the level is not visible
if (!visible) {
    
    //Make visible...
    visible = 1;
    
    //...and remember it
    ds_map_replace(global.mapscreen, id, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mapplayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Print level name on obj_mapcontrol

if (other.speed == 0)
&amp;&amp; ((obj_mapcontrol.levelname = "") || (obj_mapcontrol.levelname = "????????")) {

    //Level ID
    obj_mapcontrol.levelid = levelid;

    //Level Name    
    if (block &gt; 0)
        obj_mapcontrol.levelname = "????????";    
    else
        obj_mapcontrol.levelname = levelname;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go where the panel takes you

//Play 'Enter Stage' sound
audio_play_sound(snd_enterstage, 0, false);

//If no checkpoint was reached, set the default room
if (checkpoint == noone) {

    //Set the target room
    with (obj_mapplayer) 
        myroom = other.myroom;
}

//Otherwise, if a checkpoint was reached go to the checkpoint room
else {

    //Remember it
    global.checkpoint = checkpoint;
    
    //Set the target room
    with (obj_mapplayer)
        myroom = global.checkpointroom;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check level id

if (global.level != levelid) {

    //Check for collected star coins in the previous world
    for (var i = 0; i &lt; 3; i++) {
    
        //If the star coin has not been saved
        if (ds_map_find_value(global.sc[i],global.level) &lt; 3)
            ds_map_replace(global.sc[i],global.level,0);
    }
}

//Set the new level id
global.level = levelid;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the level panel.

//If there is more than 0 Star Coins needed to unlock the level.
if (block &gt; 0) 
{
    //Do you have enough Star Coins?
    if (global.starcoins &gt;= block) {
    
        draw_sprite(sprite_index,-1,round(x),round(y));
     
        //Remove the block.
        block = 0;   
    }
        
    else {
    
        draw_sprite_ext(sprite_index,-1,round(x),round(y),1,1,0,c_black,1);
        
        //Align the text
        draw_set_halign(fa_center);
        
        //Set the font
        draw_set_font(global.font_interface);
        
        //Set the alpha
        draw_set_alpha(1);
        
        //Draw the needed stars
        draw_text(x+8,y-10,string_format(block,0,0));
        
        //Align the text again
        draw_set_halign(fa_left);
    }
}

else
    draw_sprite(sprite_index,-1,round(x),round(y));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
