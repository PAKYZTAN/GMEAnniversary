<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_qblock_spiked_nospin</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_solid</parentName>
  <maskName>spr_square</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spiked Question Mark Block

/*
**  This item uses creation code!
**
**  sprout = Pick from below:
**      cs_coin_s
**      cs_big
**      cs_fire
**      cs_ice
**      cs_carrot
**      cs_leaf
**      cs_frog
**      cs_tanooki
**      cs_hammer
**      cs_boomerang
**      cs_super
**      cs_bomb
**      cs_shell
**      cs_bee
**      cs_lightning
**      cs_penguin
**      cs_propeller
**      cs_cat
**      cs_yoshi
**      cs_yoshi_r
**      cs_yoshi_y
**      cs_yoshi_b
**      cs_kuriboshoe
**      cs_baburushoe
**      cs_dossunshoe
**      cs_jugemushoe
**      cs_golden
**      cs_1up
**      cs_3up
**      cs_poison
**      cs_pwing
**      cs_star
**      cs_key
**      cs_pswitch
**      cs_gswitch
**      cs_trampoline
**      cs_propellerblock
**      cs_beanstalk
**      cs_billy
*/

//Default value
sprout = cs_coin;

//If the block is turning
turn = 0;

//The block's angle
angle = 0;

//Turn
alarm[0] = 150;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn and move the player

//If the player exists
if (instance_exists(obj_playerparent)) {

    //If the player is on this block
    if ((collision_rectangle(bbox_left,bbox_top-5,bbox_right,bbox_top+4,obj_playerparent,1,0))
    &amp;&amp; (obj_playerparent.bbox_bottom &lt; yprevious+5)
    &amp;&amp; (obj_playerparent.state &lt; 2)) {
    
        //Move the player
        with (obj_playerparent) {
        
            yspeed = -4;
            xspeed = 1.5;
        }
    }
}

//Change the turning phase.
if (turn == 0)
    turn = 1;
else if (turn == 1)
    turn = 2

//Repeat the process.
alarm[0] = 150;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles the block's angling.
 
//Make the block turn when needed to
if ((turn == 1) &amp;&amp; (angle &lt; 180))
|| ((turn == 2) &amp;&amp; (angle &lt; 360)) {

    //Rotate the block by 15 degrees
    angle += 15;
}
    
//Reset the angle if it's past 360
if (angle &gt;= 360) {

    //Reset the angle
    angle = 0;
    
    //Reset the turning state
    turn = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bump this block 

//Check for the player
var player = collision_rectangle(bbox_left,bbox_bottom+1,bbox_right,bbox_bottom+2,obj_playerparent,0,0);

//If the player is in position
if (player)
&amp;&amp; (player.state = 2)
&amp;&amp; (player.yspeed &lt;= 0)
&amp;&amp; (angle == 0) {

    //Create a new block, give it the same item and bump it.
    with (instance_create(x,y,obj_qblock)) {
    
        //Set the sprite
        sprite_index = spr_qblock_spiked_nospin;
        image_speed = 0;
        image_index = 0;
    
        //Bump it
        ready = 1;
        
        //Set the vertical speed
        vspeed = -2;
        
        //Move down
        alarm[0] = 4;
        
        //Hereby the item
        sprout = other.sprout;
        
        //Hereby block specific events
        event_user(0);
    }
    
    //Destroy
    instance_destroy();
}

if ((angle == 0) &amp;&amp; ((collision_rectangle(bbox_left,bbox_top-1,bbox_right,bbox_top-1,obj_playerparent,0,0)) &amp;&amp; (global.mount == 0)))
|| ((angle &gt; 30 &amp;&amp; angle &lt; 150) &amp;&amp; (collision_rectangle(bbox_right+1,bbox_top,bbox_right+1,bbox_bottom,obj_playerparent,0,0)))
|| ((angle == 180) &amp;&amp; (collision_rectangle(bbox_left,bbox_bottom+1,bbox_right,bbox_bottom+1,obj_playerparent,0,0)))
|| ((angle &gt; 210 &amp;&amp; angle &lt; 330) &amp;&amp; (collision_rectangle(bbox_left-1,bbox_top,bbox_left-1,bbox_bottom,obj_playerparent,0,0)))
    with (obj_playerparent) event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw it.

draw_sprite_ext(spr_qblock_spiked,image_index,x+8,y+8,1,1,-angle,c_white,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
