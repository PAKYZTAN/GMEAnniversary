<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boltlift</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bolt Lift

//Do not animate
image_speed = 0;

//Create a solid
mytop = instance_create(x,y,obj_boltlift_top);

//Check if stuck
stuck = 0;

//Check if spinning
isspin = 0;

//Check if headshot
headshot = 0;

//Spin offset
spinoffset = 0;

//Player fall speed
playerfallspeed = 0.25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy solid mask

with (mytop) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop animation

//Do not animate.
image_speed = 0;

//Stop horizontal speed.
hspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bolt Lift logic

if (isspin) {

    spinoffset++;
    if (spinoffset &gt; 16) {
    
        spinoffset = 0;
        isspin = 0;
        alarm[0] = 60;
    }
}

//Snap solid into position.
mytop.x = x;
mytop.y = y+spinoffset;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make the platform fall when not in contact with a layer 12 tile.

if ((!tile_layer_find(12,x,y)) &amp;&amp; (!tile_layer_find(12,x+31,y))) {

    //Create a falling bolt lift
    with (instance_create(x,y,obj_boltlift_fall)) {
    
        hspeed = other.hspeed;
        image_speed = other.image_speed;
        image_index = other.image_index;
    }
    
    //Destroy
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_marker_bottom">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This collision happens if the player walks onto the platform as opposed to jumping on it.

if (place_meeting(x,y,obj_playerparent))
exit;

if (collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_top,obj_marker_bottom,1,0)) {

    //If the mask is in contact with a wall.
    if (mytop.touchleft) {
    
        //Headshot it.    
        headshot = 5
        
        //Animate it.
        image_speed = 0.5;
        
        //Set the horizontal speed.
        hspeed = 0.25;
        
        //Stop it.
        alarm[0] = 30; 
    }
    
    //If the platform is not spinning.
    if ((!isspin) &amp;&amp; (!stuck)) {
    
        alarm[0] = -1;
        isspin = true;
    }
    
    //Animate it.
    image_speed = 0.5;
    
    //Set the horizontal speed.
    hspeed = 0.25;
    
    //Stop it.
    alarm[0] = 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_marker_head">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///This collision happens if the player hits the platform from below.

if ((collision_rectangle(bbox_left,bbox_bottom-1,bbox_right,bbox_bottom+1,obj_marker_head,0,0)) &amp;&amp; (obj_playerparent.yspeed &lt; 0)) {

    //If the mask is in contact with a solid.
    if (mytop.touchright) {
    
        headshot = 5;
    }
    
    //Make Mario not jump
    obj_playerparent.yspeed = 1;
    obj_playerparent.jumping = 2;
    
    //Animate
    image_speed = -0.5;
    
    //Unstuck it.
    if (stuck) {
    
        stuck = false;
    }
    
    //Set horizontal speed
    hspeed = -0.25;
    
    //Stop it
    alarm[0] = 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_playerparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///This collision happens if the player jumps onto the platform.

//If Mario's vertical speed is lower than 0.25 or there's a solid on the way.
if ((obj_playerparent.yspeed &lt; playerfallspeed) || (place_meeting(x,y,obj_solid))) {

    //If the solid is nearby
    if (mytop.touchleft) {
    
        //Animate
        image_speed = 0.5;
        
        //Set the horizontal speed
        hspeed = 0.25;
        
        //Stop it
        alarm[0] = 30;
    }
    
    //Exit this event
    exit;
}

//Check Mario's y
if ((obj_playerparent.y + (-sprite_get_height(obj_playerparent.sprite_index) + 16) &lt; y) &amp;&amp; (!place_meeting(x,y,obj_marker_head))) {

    //If the platform is not spinning and not stuck on a solid.
    if ((!isspin) &amp;&amp; (!stuck)) {
    
        alarm[0] = -1;
        isspin = true;
    }
    
    //Animate
    image_speed = 0.5;
    
    //Set the horizontal speed
    hspeed = 0.25;
    
    //Stop it
    alarm[0] = 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make the platform stop.

if (!headshot) {

    //Round x position
    x = round(x);
    
    //Do not animate
    image_speed = 0;
    image_index = 0;
    
    //Stop horizontal speed
    hspeed = 0;
    
    //Stop offset
    spinoffset = 0;
    
    //Make the platform get stuck
    stuck = true;
}

if (headshot &gt; 0) {

    stuck = false;
    headshot--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
