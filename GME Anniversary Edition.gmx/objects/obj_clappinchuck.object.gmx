<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_charginchuck</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_charginchuck</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clappin' Chuck

//How vulnerable is this enemy to various items?
vulnerable = 2;

//How vulnerable is this enemy to the player?
stomp = 4;

//How vulnerable is this enemy to yoshi?
edible = 2;

//Facing direction
xscale = 1;

//Whether the object is swimming
swimming = false;

//Whether the object is clapping
clap = 0;

//Hitpoints
hp = 3;

//Animate
image_speed = 0;

//Jump
alarm[0] = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Jump or make noise when charging

if (hp == 3) {

    //Set the jump sprite
    sprite_index = spr_charginchuck_jump;
    
    //Do not animate
    image_speed = 0;
    image_index = 0;
    
    //Gravity
    gravity = 0.15;
    
    //If the player exists
    if (instance_exists(obj_playerparent)) {
    
        if (obj_playerparent.x &gt; x-32) 
        &amp;&amp; (obj_playerparent.x &lt; x+32) {
        
            //Play 'Trampoline' sound
            audio_play_sound(snd_trampoline, 0, false);
            
            //Set the vertical speed
            vspeed = -3.5;
            y--;
            
            //Clap
            clap = 1;
        }
        else {
        
            vspeed = -1.75;
            y--;
        }
    }
    else {
    
        vspeed = -1.75;
        y--;
    }
}

//Otherwise, inherit default event
else
    event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clappin' Chuck logic

if (hp == 3) {

    //Floor collision
    event_user(4);
    
    //If clapping
    if (clap == 1) {

        //If moving down
        if (vspeed &gt; 0) {
        
            //Play 'Pop' sound
            audio_play_sound(snd_pop, 0, false);
            
            //End clap
            clap = 0;
            
            //Reset animation
            alarm[1] = 16;
            
            //Set clapping frame
            image_index = 1;
        }        
    }
    
    //Gravity
    if (gravity &gt; 0) {
    
        //Make sure it gets low gravity when jumping
        if (sprite_index == spr_charginchuck_jump)
            gravity = 0.15;
    }
    
    //Otherwise, if not jumping
    else if (gravity == 0) {
    
        //If the jumping frame is used
        if (sprite_index == spr_charginchuck_jump) {
        
            //Set the regular sprite
            sprite_index = spr_charginchuck;
            
            //Do not animate
            image_speed = 0;
            image_index = 0;
            
            //Jump again
            alarm[0] = 15;
        }
    }
    
    //Face towards the player
    event_user(8);
}
else
    event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
