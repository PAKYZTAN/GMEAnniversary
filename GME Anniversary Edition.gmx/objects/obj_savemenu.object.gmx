<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_marker_event</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-12</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///The Map Save Menu.

//Play a sound
audio_play_sound(snd_message,false,0);

//Make sure it doesn't animate
image_speed = 0;
image_index = 0;

//Set the choice to the first option
choice = 0;

//The menu has just opened up.
ready = 0;

//Make the scaling start at 0
scale = 0;

//Is the map quittable?
quitable = 0;

//Clear same stuff
io_clear();

//Set the color
draw_set_color(c_white);

//Set the font
font = global.font_message;

//Texts for the menu
menu[0] = 'Save and Continue';
menu[1] = 'Save and Quit';
menu[2] = 'Continue without Saving';
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Closes the game...

//The menu is quitable
quitable = 1;

//End the game
game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Begin closing the menu.

//Make the player able to move again
obj_mapplayer.ready = 0;

//Play the current world map theme
obj_mapcontrol.alarm[2] = 1;

//Clear some stuff
io_clear();

//Destroys the instance...
ready = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles Scaling.

if (ready == 0) {

    scale += 0.05;
    
    if (scale &gt; 1) {
    
        scale = 1;
        ready = 1;
    }
}

if (ready == 2) {

    //Decrement scale
    scale -= 0.05;   
    if (scale &lt; 0.05)
        scale = 0;
}

//Destroy if quitable
if (scale == 0)
&amp;&amp; (quitable = 1)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles keyboard presses.

//Check if the 'Up Key' is pressed.
if (keyboard_check_pressed(global.upkey)) {

    //If the choice is already the first, exit
    if ((choice == 0) || (ready &lt;&gt; 1))
    exit;
    
    //Otherwise, move up a choice
    choice -= 1;
    
    //Play a sound
    audio_play_sound(snd_move,false,0);
}

//Check if the 'Down Key' is pressed.
else if (keyboard_check_pressed(global.downkey)) {

    //If the choice is already the last, exit
    if ((choice == 2) || (ready &lt;&gt; 1))
    exit;
    
    //Otherwise, move down a choice
    choice += 1;
    
    //Play a sound
    audio_play_sound(snd_move,false,0);
}

//Check if the 'Shift Key' is pressed.
else if (keyboard_check_pressed(global.shiftkey)) {

    //Has the action been completed?
    if (ready == 1) {
    
        //If you chose the first choice
        if (choice == 0) {
        
            //Play a sound
            audio_play_sound(snd_save,false,0);
            
            //Begin menu closement
            alarm[0] = 2;
            
            //Allowed to quit
            quitable = 1
            
            //Saves the game...
            event_user(0);
        }
        
        //If you chose the second choice
        else if (choice == 1) {
        
            //Play a sound
            audio_play_sound(snd_save,false,0);
            
            //Begin menu closement
            alarm[0] = 2;
            
            //Saves and closes the game...
            event_user(1);
        }
        
        //If you chose the last choice
        else if (choice == 2) {
        
            //Play a sound
            audio_play_sound(snd_correct,false,0);
            
            //Begin menu closement
            alarm[0] = 2;
            
            //Alowed to quit
            quitable = 1
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Save the files and close the game.

//Save the game
event_user(0);

//Prepares to close the game.
alarm[1] = 25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Save the game

//Save in the given file
save(global.file);

//If 'File A' exists, open Info A
if (global.file = "GMEASaveA.sav") {

    ini_open("GMEAInfoA.ini");
    ini_write_real("Coins", "Data", global.starcoins);
    ini_write_real("Exits", "Data", (ds_map_size(global.exits) + ds_map_size(global.exits2)));
    ini_write_real("Clear", "Completion", global.gameclear);
    ini_close();
}

//Otherwise, open file B
else if (global.file == "GMEASaveB.sav") {

    ini_open("GMEAInfoB.ini");
    ini_write_real("Coins", "Data", global.starcoins);
    ini_write_real("Exits", "Data", (ds_map_size(global.exits) + ds_map_size(global.exits2)));
    ini_write_real("Clear", "Completion", global.gameclear);
    ini_close();
}

//Otherwise, open file C
else if (global.file == "GMEASaveC.sav") {

    ini_open("GMEAInfoC.ini");
    ini_write_real("Coins", "Data", global.starcoins);
    ini_write_real("Exits", "Data", (ds_map_size(global.exits) + ds_map_size(global.exits2)));
    ini_write_real("Clear", "Completion", global.gameclear);
    ini_close();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the menu.

//Draw the menu
draw_sprite_ext(spr_pausemenu,2,view_xview[0]+global.gw/2,view_yview[0]+global.gh/2,scale,scale,0,c_white,1);

//Align the text
draw_set_halign(fa_center);
draw_set_valign(fa_center);

//Set up the font
draw_set_font(font);

//Set the alpha
draw_set_alpha(1);

//Draw the text on the menu
if (scale &gt;= 1) {

    for(i = 0; i &lt; 3; i++) {
    
        text = string(menu[i]);
        if (choice != i)
            draw_text_colour_shadowed(view_xview[0]+global.gw/2,view_yview[0]+global.gh/2-12+(i)*12,string(text), make_color_rgb(1,117,203), make_color_rgb(151,216,255), 1, 1, 1, 1);
        else
            draw_text_colour_shadowed(view_xview[0]+global.gw/2,view_yview[0]+global.gh/2-12+(i)*12,"{ " + string(text) + " }", make_color_rgb(1,117,203), c_white, 1, 1, 1, 1);
    }
}

//Re align the text
draw_set_halign(fa_left);
draw_set_valign(fa_top);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
