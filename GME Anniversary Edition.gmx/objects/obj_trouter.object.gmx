<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_trouter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_enemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Trouter

//How vulnerable is this enemy to various items?
vulnerable = 1;

//How vulnerable is this enemy to the player?
stomp = 2;

//How vulnerable is this enemy to yoshi?
edible = 0;

//Facing direction
xscale = 1;

//Whether the podoboo is jumping
ready = 0;

//Animate
image_speed = 0.125;

//Set the gravity.
gravity = 0.2;

//Create solid collision
mytop = instance_create(x,y-14,obj_enemytop);
with (mytop) {
    
    //Set the scale
    image_yscale = 0.25;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy mytop

with (mytop) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make it jump.

//If inside view
if (x &gt; view_xview[0]-32)
&amp;&amp; (x &lt; view_xview[0]+view_wview[0]+32) {

    //Make it visible
    visible = true;
    
    //Set the vertical speed.
    vspeed = -4;
}

//Otherwise, wait
else
    alarm[2] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop it

//Make it invisible
visible = false;

//Stop vertical speed.
vspeed = 0;
gravity = 0;

//Jump again.
alarm[2] = 40;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Finish pull

//If the puller object does exist
if (instance_exists(obj_puller)) {

    //Play 'Pickup' sound
    audio_play_sound(snd_pickup, 0, false);
    
    //Create vegetable
    with (instance_create(obj_playerparent.x,y,obj_turnip_out)) {
    
        //Get the sprite
        sprite_index = other.sprite_index;
        
        //Get the facing direction
        image_xscale = other.xscale;
        
        //Set the respawn object
        turnback = -1;
        myveggie = obj_enemy_carried;
        
        //Pull up
        alarm[5] = 3;
        
        //Mark as enemy
        enemy = true;
    }
    
    //Destroy
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pull / Moving platform logic

//If the collision exists
if (instance_exists(mytop)) {

    //Snap semisolid to position
    mytop.x = x;
    mytop.y = bbox_top;
    
    //If the player is on this enemy
    if ((collision_rectangle(bbox_left,bbox_top-5,bbox_right,bbox_top+4,obj_playerparent,0,0))
    &amp;&amp; (obj_playerparent.bbox_bottom &lt; yprevious+5)
    &amp;&amp; (obj_playerparent.state &lt; 2)) {
        
        //If the pull object does not exist and this object can be pulled
        if (instance_number(obj_puller) == 0) 
        &amp;&amp; (canpull()) {
        
            //Force player hold
            with (obj_playerparent) {
            
                holding = 1;
                visible = 0;
            }
            
            //Create puller
            instance_create(obj_playerparent.x,obj_playerparent.y,obj_puller);
            
            //Finish pull
            alarm[0] = 10;
        }
        
        //Check for a moving platform
        var check = collision_rectangle(obj_playerparent.bbox_left,obj_playerparent.bbox_bottom-1,obj_playerparent.bbox_right,obj_playerparent.bbox_bottom+1,obj_enemytop,0,0);
        if (check)
        &amp;&amp; (check != mytop)
            exit;
                
        //Snap the player vertically
        obj_playerparent.y = ceil(bbox_top-15);

        //Move the player horizontally if there is no solid in his way
        if (hspeed &lt; 0) &amp;&amp; (!collision_rectangle(obj_playerparent.bbox_left+hspeed,obj_playerparent.bbox_top+4,obj_playerparent.bbox_left+hspeed,obj_playerparent.bbox_bottom-1,obj_solid,0,0))
        || (hspeed &gt; 0) &amp;&amp; (!collision_rectangle(obj_playerparent.bbox_right+hspeed,obj_playerparent.bbox_top+4,obj_playerparent.bbox_right+hspeed,obj_playerparent.bbox_bottom-1,obj_solid,0,0))
            obj_playerparent.x += hspeed;       
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Trouter logic

//Make it fall when reaching start position.
if ((y &lt; ystart+39) &amp;&amp; (ready == true)) {

    //Make it fall.
    ready = false;
    gravity = 0.2;
}

//Bounce if outside the room.
if (bbox_top &gt; room_height) {

    if (!ready) {
    
        //Make it stop
        ready = true;
        
        //Stop after 10 steps.
        alarm[1] = 10;
    }
}

//Set the scale.
xscale = 1;

//Prevent it from falling too fast.
if (vspeed &gt; 3)
    vspeed = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw podoboo

if (vspeed &lt; 0)
    draw_sprite(sprite_index, -1, round(x), round(y));
else
    draw_sprite_ext(sprite_index, -1, round(x), round(y)+16, 1, -1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
