<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_billy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_hammer</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Billy

//Do not animate
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Billy logic

//If moving right
if (hspeed &gt; 0) {

    //If there's a collision in position
    if (collision_rectangle(bbox_right, y-8, bbox_right+1, y+7,obj_solid,0,0))
    || (collision_rectangle(bbox_right, y-8, bbox_right+1, y+7,obj_slopeparent,1,0))
    || (collision_rectangle(bbox_right, y-8, bbox_right+1, y+7,obj_ceilslopeparent,1,0)) {
    
        //Play 'Bump' sound
        audio_play_sound(snd_bump, 0, false);
        
        //Create a dead billy
        with (instance_create(x, y, obj_billy_dead)) {
        
            hspeed = -1;
            image_xscale = other.image_xscale;
        }
        
        //Destroy
        instance_destroy();
    }
}

//Otherwise, if moving left
else {

    //If there's a collision in position
    if (collision_rectangle(bbox_left-1, y-8, bbox_left, y+7,obj_solid,0,0))
    || (collision_rectangle(bbox_left-1, y-8, bbox_left, y+7,obj_slopeparent,1,0))
    || (collision_rectangle(bbox_left-1, y-8, bbox_left, y+7,obj_ceilslopeparent,1,0)) {
    
        //Play 'Bump' sound
        audio_play_sound(snd_bump, 0, false);
        
        //Create a dead billy
        with (instance_create(x, y, obj_billy_dead)) {
        
            hspeed = 1;
            image_xscale = other.image_xscale;
        }
        
        //Destroy
        instance_destroy();
    }
}

//Destroy when outside
if (outside_view())
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy billy
        
//Play 'Bump' sound
audio_play_sound(snd_bump, 0, false);

//Create a dead billy
with (instance_create(x, y, obj_billy_dead)) {

    image_xscale = other.image_xscale;
    if (other.hspeed &gt; 0)
        hspeed = -1;
    else
        hspeed = 1;
}

//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
