<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_nokobombette</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_nokobombette</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ceiling Nokobombette

//Inherit event
event_inherited();

//Whether the buzzy beetle is falling
ready = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ceiling Nokobombette logic

//If the buzzy is in the ceiling
if (ready == 0) {

    //If the player does exist
    if (instance_exists(obj_playerparent)) {
    
        //If the player is nearby
        if (obj_playerparent.x &gt; x-32)
        &amp;&amp; (obj_playerparent.x &lt; x+32) 
        &amp;&amp; (obj_playerparent.y &gt; y) {
        
            //Set the sprite
            sprite_index = spr_nokobombette_bomb;
            
            //Start animating
            image_speed = 0.3;
            image_index = 0;
        
            //Stop horizontal speed
            hspeed = 0;
            
            //Drop
            ready = 1;
        }
    }
    
    //Make sure if does not wall off ceilings
    if ((hspeed &lt; 0) &amp;&amp; (!position_meeting(bbox_left,y-4,obj_solid)))
    || ((hspeed &gt; 0) &amp;&amp; (!position_meeting(bbox_right,y-4,obj_solid)))
        hspeed = -hspeed;
}

//Otherwise, if the buzzy beetle is falling
else {

    //Floor collision
    event_user(4);
    
    //Check if in ground and explode if so
    if (gravity == 0) {
    
        //Create a shell
        instance_create(x-8,y,obj_explosion);
        
        //Destroy
        instance_destroy();
    }
}

//Turn at enemies script
event_user(2);

//Wall collision
event_user(3);

//Set the facing direction
if (hspeed &gt; 0)
    xscale = 1;
else if (hspeed &lt; 0)
    xscale = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw ceiling buzzy beetle

draw_sprite_ext(sprite_index, -1, round(x), y+15, xscale, -1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
