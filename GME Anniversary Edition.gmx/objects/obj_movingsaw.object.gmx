<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_movingengine</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_deactivateparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A engine with a sawblade that moves in a path

/*
**  This item uses creation code!
**
**  ready = Whether this engine can move or not move at the start of the room.
**      0:      Do not move
**      1:      Move
**
**  direct = Set up the direction where this engine will move.
**      0:      Right
**      90:     Up
**      180:    Left
**      270:    Down
**
**  sawdir = Position of the rope
**      0:      Up
**      1:      Down
*/

//Default variables
ready = 0;
direct = 0;
sawdir = 0;

//Animate
image_speed = 0.3;

//Saw
saw = -1;

//Create sawblade
alarm[0] = 1;

//Play a sound when inside the screen
alarm[1] = 15;

//Start moving
alarm[10] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start moving

if (!ready) {

    //Start moving
    ready = true;
    
    //Move towards the player
    if (!instance_exists(obj_playerparent))
    || (obj_playerparent.x &lt; x)
        direct = 180;
    else
        direct = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Play a sound

//Play 'Engine' sound
if (!outside_view())
    audio_play_sound(snd_engine, 0, false);

//Repeat
alarm[1] = 7;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create the sawblade

saw = instance_create(x,y+14,obj_saw);
with (saw) 
    parent = other.id;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make the saw-blade move along with the engine.

if (saw != -1) {

    saw.x = self.x;
    if (sawdir == 0)
        saw.y = self.y-28;
    else if (sawdir == 1) {
    
        saw.y = self.y+14;
        saw.sprite_index = spr_movingsaw_down
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Makes the engine move around on paths.

//If the engine is moving.
if (ready == 1) {

    //Check up in what direction is the engine moving.
    switch (direct) {
    
        //If the engine is moving to the right.
        case (0): {
        
            if (collision_point(x+1,y+sprite_height/2,obj_pathparent,1,0))
                x++;
            else if (collision_point(x+1,y+(sprite_height/2)-1,obj_pathparent,1,0)) {
            
                x++;
                y--;
            }
            else if (collision_point(x+1,y+(sprite_height/2)+1,obj_pathparent,1,0)) {
            
                x++;
                y++;
            }
            else if (collision_point(x,y+(sprite_height/2)-1,obj_pathparent,1,0)) {
            
                y--;
                direct = 90;
            }
            else if (collision_point(x,y+(sprite_height/2)+1,obj_pathparent,1,0)) {
            
                y++;
                direct = 270;
            }
            else            
                direct = 180;
        } break;
        
        //Otherwise, if the engine is moving upwards.
        case (90): {
        
            if (collision_point(x,y+(sprite_height/2)-1,obj_pathparent,1,0))     
                y--;
            else if (collision_point(x-1,y+(sprite_height/2)-1,obj_pathparent,1,0)) {
            
                x--;
                y--;
            }
            else if (collision_point(x+1,y+(sprite_height/2)-1,obj_pathparent,1,0)) {
            
                x++;
                y--;
            }
            else if (collision_point(x-1,y+sprite_height/2,obj_pathparent,1,0)) {
            
                x--;
                direct = 180;
            }
            else if (collision_point(x+1,y+sprite_height/2,obj_pathparent,1,0)) {
            
                x++;
                direct = 0;
            }
            else     
                direct = 270;
        } break;
        
        //Otherwise, if the engine is moving to the left.
        case (180): {
        
            if (collision_point(x-1,y+sprite_height/2,obj_pathparent,1,0))         
                x--;
            else if (collision_point(x-1,y+(sprite_height/2)-1,obj_pathparent,1,0)) {
            
                x--;
                y--;
            }
            else if (collision_point(x-1,y+(sprite_height/2)+1,obj_pathparent,1,0)) {
            
                x--;
                y++;
            }
            else if (collision_point(x,y+(sprite_height/2)-1,obj_pathparent,1,0)) {
            
                y--;
                direct = 90;
            }
            else if (collision_point(x,y+(sprite_height/2)+1,obj_pathparent,1,0)) {
            
                y++;
                direct = 270;
            }
            else            
                direct = 0;
        } break;
        
        //Otherwise, if the engine is moving downwards.
        case (270): {
        
            if (collision_point(x,y+(sprite_height/2)+1,obj_pathparent,1,0))    
                y++;
            else if (collision_point(x-1,y+(sprite_height/2)+1,obj_pathparent,1,0)) {
            
                x--;
                y++;
            }
            else if (collision_point(x+1,y+(sprite_height/2)+1,obj_pathparent,1,0)) {
            
                x++;
                y++;
            }
            else if (collision_point(x-1,y+sprite_height/2,obj_pathparent,1,0)) {
            
                x--;
                direct = 180;
            }
            else if (collision_point(x+1,y+sprite_height/2,obj_pathparent,1,0)) {
            
                x++;
                direct = 0;
            }
            else            
                direct = 90;
        } break;
    }
}

if (saw != -1)
    instance_activate_object(saw);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

draw_sprite(sprite_index,-1,round(x),round(y));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
