<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_shell</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_enemyparent_held</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A koopa shell that can be held

//Default values
koopainside = 0;

//Inherit event
event_inherited();

//Shake
shake = 0;

//Allow kick
kickme = 0;
alarm[2] = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Allow kick

kickme = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Wake up

//Stop shaking
shake = 0;
alarm[0] = -1;

//If there's a koopa inside the shell, make it go inside
if (koopainside != 0) {

    //Check what koopa is inside and create it
    switch (koopainside) {
    
        //Other shelled enemies
        case (-1): {
        
            //Big Green Koopa
            if (sprite_index == spr_shell_big)
            || (sprite_index == spr_shell_big_down) {
            
                instance_create(x,y,obj_koopa_big);
                instance_destroy();
            }
            
            //Big Red Koopa
            else if (sprite_index == spr_shell_big_red)
            || (sprite_index == spr_shell_big_red_down) {
            
                instance_create(x,y,obj_koopa_big_red);
                instance_destroy();
            }
            
            //Buzzy Beetle
            else if (sprite_index == spr_shell_buzzy)
            || (sprite_index == spr_shell_buzzy_down) {
            
                instance_create(x,y,obj_buzzybeetle);
                instance_destroy();
            }
            
            //Spiny
            else if (sprite_index == spr_shell_spiny) {
            
                instance_create(x,y,obj_spiny);
                instance_destroy();
            }                  
        } break;
    
        //Green
        case (1): instance_create(x,y,obj_beachkoopa); break;
        
        //Red
        case (2): instance_create(x,y,obj_beachkoopa_red); break;
        
        //Blue
        case (3): instance_create(x,y,obj_beachkoopa_blue); break;
        
        //Yellow
        case (4): instance_create(x,y,obj_beachkoopa_yellow); break;
    }
    
    //Do not create koopas
    koopainside = 0;
}

//Otherwise, wake up
else {

    //If the shell is a green one
    if (sprite_index == spr_shell)
    || (sprite_index == spr_shell_down) {
    
        instance_create(x,y,obj_koopa);
        instance_destroy();
        exit;
    }
    
    //Otherwise if the shell is a red one
    if (sprite_index == spr_shell_red)
    || (sprite_index == spr_shell_red_down) {
    
        instance_create(x,y,obj_koopa_red);
        instance_destroy();
        exit;
    }
    
    //Otherwise if the shell is a blue one
    if (sprite_index == spr_shell_blue)
    || (sprite_index == spr_shell_blue_down) {
    
        instance_create(x,y,obj_koopa_blue);
        instance_destroy();
        exit;
    }       
    
    //Otherwise if the shell is a red one
    if (sprite_index == spr_shell_yellow)
    || (sprite_index == spr_shell_yellow_down) {
    
        instance_create(x,y,obj_koopa_yellow);
        instance_destroy();
        exit;
    }                  
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shake

alarm[0] = 1;
if (shake != 1)
    shake = 1;
else
    shake = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make buzzy beetle shells not vulnerable to fire

//Hereby silver switch event
event_inherited();

//Make buzzy shells invulnerable to fire
if (sprite_index == spr_shell_buzzy)
|| (sprite_index == spr_shell_buzzy_down)
    vulnerable = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_playerparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make the player interact with the item

//If the player is sliding
if (other.sliding) 
&amp;&amp; (vulnerable &lt; 99) {
    
    //Kill the enemy
    event_user(0);  
    
    //Get points based on combo
    if (other.hitcombo == 0) { //200 points
    
        audio_play_sound(snd_kick2, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(2);
    }
    else if (other.hitcombo == 1) { //400 points
    
        audio_play_sound(snd_kick3, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(3);
    }
    else if (other.hitcombo == 2) { //800 points
    
        audio_play_sound(snd_kick4, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(4);
    }
    else if (other.hitcombo == 3) { //1000 points
    
        audio_play_sound(snd_kick5, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(5);
    }
    else if (other.hitcombo == 4) { //2000 points
    
        audio_play_sound(snd_kick6, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(6);
    }
    else if (other.hitcombo == 5) { //4000 points
    
        audio_play_sound(snd_kick7, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(7);
    }
    else if (other.hitcombo == 6) { //8000 points
    
        audio_play_sound(snd_kick8, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(8);
    }
    else if (other.hitcombo &gt; 6) { //1-UP

        audio_play_sound(snd_kick8, 0, false);
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
            event_user(9);
    }
    
    //Create 'Spinthump' effect
    with (instance_create(round(bbox_left+bbox_right)/2,round(bbox_top+bbox_bottom)/2-8,obj_smoke)) sprite_index = spr_spinthump;
    
    //Increment hitcombo
    other.hitcombo++;                  
}

//Otherwise, do default event
else if (kickme) {

    //If the item is not held
    if (!held) {
            
        //If the player can hold the item
        if (canhold()) &amp;&amp; (!inwall) {
        
            //Make the player hold it
            other.holding = 2;
            
            //Hold
            held = 1;
            
            //Stop movement
            speed = 0;
            gravity = 0;
        }
        
        //Otherwise, kick it
        else {
        
            //If the player is above and it's riding either a yoshi or a kuribo shoe
            if ((global.mount &gt; 0) || (other.stompstyle == 1)) {
                
                //Make the player bounce
                with (obj_playerparent) event_user(1);
                
                //Create spin smoke
                instance_create((bbox_left+bbox_right)/2-8,y,obj_spinsmoke);
                
                //Get points based on combo                
                if (other.hitcombo &lt;= 6) { //If the player did less than 6 consecutive stomps
                
                    with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                        event_user(2+obj_playerparent.hitcombo);
                }

                //If the player did 7 or more consecutive stomps
                else if (other.hitcombo &gt; 6) { //1-UP
                
                    //If the combo is odd
                    if (other.hitcombo % 2 == 1) {
                
                        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                            event_user(9);
                    }
                    
                    //Otherwise, if the combo is even
                    else if (other.hitcombo % 2 == 0) {

                        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score))
                            event_user(10);        
                    }
                }
                
                //Increment hitcombo
                other.hitcombo++;
                
                //Destroy
                instance_destroy();                   
            }
            
            else if (vspeed &gt;= 0) {
            
                //Play 'Kick' sound.
                audio_play_sound(snd_kick, 0, false);
                
                //Create hit
                with (instance_create(x,y,obj_smoke)) sprite_index = spr_spinthump;
                
                //Make the player visually kick the item
                with (obj_playerparent) {
                
                    if (holding == 0)
                        event_user(4);
                }
                    
                //Create moving shell
                with (instance_create(x,y,obj_shell_kick)) {
                
                    //Set the same sprite
                    sprite_index = other.sprite_index;
                    
                    //If a koopa is inside
                    koopainside = other.koopainside;          
                    
                    //Set the horizontal speed
                    if (!instance_exists(obj_playerparent))
                    || (obj_playerparent.x &lt; x) {
                    
                        hspeed = 2.7;
                        prevhspeed = 2.7;
                    }
                    else {
                    
                        hspeed = -2.7;
                        prevhspeed = -2.7;
                    }                                        
                }
                
                //Destroy
                instance_destroy();
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default enemy flip script

//Create held object
imheld = instance_create(x,y-2,obj_shell);

//Make the held object hereby the sprite or change it
if (sprite_index == spr_shell)
    imheld.sprite_index = spr_shell_down;
else if (sprite_index == spr_shell_red)
    imheld.sprite_index = spr_shell_red_down;
else if (sprite_index == spr_shell_blue)
    imheld.sprite_index = spr_shell_blue_down;
else if (sprite_index == spr_shell_yellow)
    imheld.sprite_index = spr_shell_yellow_down;
else if (sprite_index == spr_shell_big)
    imheld.sprite_index = spr_shell_big_down;
else if (sprite_index == spr_shell_big_red)
    imheld.sprite_index = spr_shell_big_red_down;
else if (sprite_index == spr_shell_buzzy)
    imheld.sprite_index = spr_shell_buzzy_down;
else
    imheld.sprite_index = sprite_index;

//Set the vspeed of the flip object
imheld.vspeed = -5;

//Check if a koopa was inside
if (koopainside != 0) {

    imheld.koopainside = koopainside;
    imheld.alarm[0] = 540;
    imheld.alarm[1] = 600;
}

//Set the hspeed of the flip object
if (other.hspeed == 0) {

    //If the kill object is at the left of this object
    if ((other.bbox_left+other.bbox_right)/2 &lt; (bbox_left+bbox_right)/2)
        imheld.hspeed = 0.6;
    else if ((other.bbox_left+other.bbox_right)/2 &gt; (bbox_left+bbox_right)/2)
        imheld.hspeed = -0.6;
}
else {

    if (other.hspeed &gt; 0)
        imheld.hspeed = 0.6;
    else if (other.hspeed &lt; 0)
        imheld.hspeed = -0.6;
}

//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Custom floor / ceiling collision

//Inherit event
event_inherited();

//If moving down and there's a slope below
if (vspeed &gt; 0.5)
    while (collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom-4,obj_slopeparent,1,0))
        y--;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default throw / kick event.

//If 'Up' is pressed, throw it upwards.
if (keyboard_check(global.upkey)) {

    //Play 'Kick' sound.
    audio_play_sound(snd_kick, 0, false);
    
    //Create hit
    with (instance_create(x,y,obj_smoke)) sprite_index = spr_spinthump;
    
    //If the item is not overlapping a solid.
    if (!collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_solid,0,0)) {
        
        //Set the horizontal speed
        hspeed = obj_playerparent.xspeed/2;
        
        //If the item is not in a water surface
        if (!collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_top,obj_swim,0,0))
            vspeed = -7;
            
        //Otherwise
        else {

            vspeed = -3.5;
            swimming = true;
        }
    }
    
    //Otherwise, kill it
    else {
    
        //Create dead object
        with (instance_create(x,y,obj_enemy_dead)) {
        
            sprite_index = other.sprite_index;
            image_xscale = other.dir;
        }
    
        //Get 100 points
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score)) event_user(1);
        
        //Destroy
        instance_destroy();  
    }
}

//Otherwise, if 'Down' is pressed.
else if (keyboard_check(global.downkey)) {
    
    //Check if the object is stuck on a solid and move it
    if (collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_solid,0,0)) {
    
        //Move it to a safe position
        inwall = true;
        
        //Stop it
        hspeed = 0;
    }
    
    //If there's not a slope in place...
    if (!collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_slopeparent,1,0))
        hspeed = 0.5*obj_playerparent.xscale;
    
    //Otherwise
    else
        vspeed = 0.1;    
}

//Otherwise, throw it to the side.
else if (vspeed &gt;= 0) {
        
    //Play 'Kick' sound.
    audio_play_sound(snd_kick, 0, false);

    //Kill instantly if in contact with a solid
    if (place_meeting(x,y,obj_solid)) {
    
        //Create dead object
        with (instance_create(x,y,obj_enemy_dead)) {
        
            sprite_index = other.sprite_index;
            image_xscale = other.dir;
        }
    
        //Get 100 points
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score)) event_user(1);
        
        //Destroy
        instance_destroy();  
    }
    else {
    
        //Create moving shell
        with (instance_create(x,y,obj_shell_kick)) {
                        
            //Set the same sprite
            sprite_index = other.sprite_index;
            
            //If a koopa is inside
            koopainside = other.koopainside;    
            
            //Set the previous hspeed
            prevhspeed = 2.7*sign(obj_playerparent.xscale);
            
            //Set the horizontal speed based on the facing direction
            hspeed = 2.7*sign(obj_playerparent.xscale);                                       
        }
    }
        
    //Create hit
    with (instance_create(x,y,obj_smoke)) sprite_index = spr_spinthump;
    
    //Destroy
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw shell

draw_sprite_ext(sprite_index,-1,round(x)+shake,y+1,dir,1,0,c_white,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
